   1                 		.file	"app_hw.c"
   2                 		.variant xap2+
   3                 	
   4                 		.small
   5                 	
   6                 		.section	.debug_abbrev,"",@progbits
   7                 	.Ldebug_abbrev0:
   8                 		.section	.debug_info,"",@progbits
   9                 	.Ldebug_info0:
  10                 		.section	.debug_line,"",@progbits
  11                 	.Ldebug_line0:
  12 0000 00 00 00 00 		.text
  12      00 02 00 00 
  12      00 00 01 01 
  12      FB 0E 0D 00 
  12      01 01 01 01 
  13                 	.Ltext0:
  14                 		.section	.text.LightHardwareInit,"ax",@progbits
  15                 		.global	LightHardwareInit
  16                 		.type	LightHardwareInit, @function
  17                 	LightHardwareInit:
  18                 	.LFB4:
  19                 		.file 1 "app_hw.c"
   0:app_hw.c      **** /******************************************************************************
   1:app_hw.c      ****  *  Copyright 2015 - 2016 Qualcomm Technologies International, Ltd.
   2:app_hw.c      ****  *  Bluetooth Low Energy CSRmesh 2.1
   3:app_hw.c      ****  *  Application version 2.1.0
   4:app_hw.c      ****  *
   5:app_hw.c      ****  *  FILE
   6:app_hw.c      ****  *      app_hw.c
   7:app_hw.c      ****  *
   8:app_hw.c      ****  *  DESCRIPTION
   9:app_hw.c      ****  *      This file implements the CSRmesh light hardware specific functions.
  10:app_hw.c      ****  *
  11:app_hw.c      ****  *  NOTE
  12:app_hw.c      ****  *      Default hardware is always IOT board.
  13:app_hw.c      ****  *
  14:app_hw.c      ****  *****************************************************************************/
  15:app_hw.c      **** 
  16:app_hw.c      **** #include <timer.h>
  17:app_hw.c      **** 
  18:app_hw.c      **** /*============================================================================*
  19:app_hw.c      ****  *  Local Header Files
  20:app_hw.c      ****  *============================================================================*/
  21:app_hw.c      **** #include "user_config.h"
  22:app_hw.c      **** #include "iot_hw.h"
  23:app_hw.c      **** #include "nvm_access.h"
  24:app_hw.c      **** #include "app_hw.h"
  25:app_hw.c      **** #include "app_mesh_handler.h"
  26:app_hw.c      **** 
  27:app_hw.c      **** /*============================================================================*
  28:app_hw.c      ****  *  Private Definitions
  29:app_hw.c      ****  *============================================================================*/
  30:app_hw.c      **** #ifdef COLOUR_TEMP_ENABLED
  31:app_hw.c      **** /* Color temperature calculation parameters */
  32:app_hw.c      **** /* Temperature is stored in 500 Kelvin units */
  33:app_hw.c      **** #define CCT_TEMP_FACTOR             (500)
  34:app_hw.c      **** #define PACK_CCT_LEVEL(temp, level) (((uint16)level << 8)| \
  35:app_hw.c      ****                                      ((temp/CCT_TEMP_FACTOR) & 0xFF))
  36:app_hw.c      **** #define GET_LEVEL(val)              ((val >> 8) & 0xFF)
  37:app_hw.c      **** #define GET_TEMP(val)               (val & 0xFF)
  38:app_hw.c      **** #define LUT_SIZE(lut)               (sizeof(lut)/sizeof(lut[0]))
  39:app_hw.c      **** #endif
  40:app_hw.c      **** 
  41:app_hw.c      **** /*============================================================================*
  42:app_hw.c      ****  *  Private Data
  43:app_hw.c      ****  *============================================================================*/
  44:app_hw.c      **** #ifdef USE_ASSOCIATION_REMOVAL_KEY
  45:app_hw.c      **** /* Association Button Press Timer */
  46:app_hw.c      **** static timer_id long_keypress_tid;
  47:app_hw.c      **** #endif /* USE_ASSOCIATION_REMOVAL_KEY */
  48:app_hw.c      **** 
  49:app_hw.c      **** #ifdef COLOUR_TEMP_ENABLED
  50:app_hw.c      **** /* Look up tables for color temperature
  51:app_hw.c      ****  * (lower byte is Temperature in 500 Kelvin units)
  52:app_hw.c      ****  * and color level (higher byte).
  53:app_hw.c      ****  */
  54:app_hw.c      **** 
  55:app_hw.c      **** /* LUT for Red */
  56:app_hw.c      **** static const uint16 cct_red_lut[] =
  57:app_hw.c      **** {
  58:app_hw.c      ****     PACK_CCT_LEVEL(  6500, 255),
  59:app_hw.c      ****     PACK_CCT_LEVEL(  7000, 245),
  60:app_hw.c      ****     PACK_CCT_LEVEL(  8000, 227),
  61:app_hw.c      ****     PACK_CCT_LEVEL( 10000, 204),
  62:app_hw.c      ****     PACK_CCT_LEVEL( 12500, 188),
  63:app_hw.c      ****     PACK_CCT_LEVEL( 15000, 179),
  64:app_hw.c      ****     PACK_CCT_LEVEL( 20000, 168),
  65:app_hw.c      ****     PACK_CCT_LEVEL( 25000, 163),
  66:app_hw.c      ****     PACK_CCT_LEVEL( 30000, 159),
  67:app_hw.c      ****     PACK_CCT_LEVEL( 35000, 157),
  68:app_hw.c      ****     PACK_CCT_LEVEL( 40000, 155)
  69:app_hw.c      **** };
  70:app_hw.c      **** 
  71:app_hw.c      **** /* LUT for Green */
  72:app_hw.c      **** static const uint16 cct_green_lut[] =
  73:app_hw.c      **** {
  74:app_hw.c      ****     PACK_CCT_LEVEL(  1000,  51),
  75:app_hw.c      ****     PACK_CCT_LEVEL(  1500, 109),
  76:app_hw.c      ****     PACK_CCT_LEVEL(  2500, 161),
  77:app_hw.c      ****     PACK_CCT_LEVEL(  3000, 180),
  78:app_hw.c      ****     PACK_CCT_LEVEL(  4000, 209),
  79:app_hw.c      ****     PACK_CCT_LEVEL(  5000, 228),
  80:app_hw.c      ****     PACK_CCT_LEVEL(  6000, 243),
  81:app_hw.c      ****     PACK_CCT_LEVEL(  6500, 249),
  82:app_hw.c      ****     PACK_CCT_LEVEL(  7000, 243),
  83:app_hw.c      ****     PACK_CCT_LEVEL(  9000, 225),
  84:app_hw.c      ****     PACK_CCT_LEVEL( 12000, 211),
  85:app_hw.c      ****     PACK_CCT_LEVEL( 18000, 199),
  86:app_hw.c      ****     PACK_CCT_LEVEL( 25000, 193),
  87:app_hw.c      ****     PACK_CCT_LEVEL( 38000, 188)
  88:app_hw.c      **** };
  89:app_hw.c      **** 
  90:app_hw.c      **** /* LUT for Blue */
  91:app_hw.c      **** static const uint16 cct_blue_lut[] =
  92:app_hw.c      **** {
  93:app_hw.c      ****     PACK_CCT_LEVEL( 1500,   0),
  94:app_hw.c      ****     PACK_CCT_LEVEL( 2000,  18),
  95:app_hw.c      ****     PACK_CCT_LEVEL( 2500,  72),
  96:app_hw.c      ****     PACK_CCT_LEVEL( 3000, 107),
  97:app_hw.c      ****     PACK_CCT_LEVEL( 4000, 163),
  98:app_hw.c      ****     PACK_CCT_LEVEL( 5000, 206),
  99:app_hw.c      ****     PACK_CCT_LEVEL( 6000, 239),
 100:app_hw.c      ****     PACK_CCT_LEVEL( 6500, 253),
 101:app_hw.c      ****     PACK_CCT_LEVEL( 7000, 255)
 102:app_hw.c      **** };
 103:app_hw.c      **** 
 104:app_hw.c      **** /*============================================================================*
 105:app_hw.c      ****  *  Private Function Prototypes
 106:app_hw.c      ****  *============================================================================*/
 107:app_hw.c      **** /* Function to convert Color temperature to level from LUT */
 108:app_hw.c      **** static uint8 getLevelFromCCTLut(uint16 temp, const uint16 *color_lut,
 109:app_hw.c      ****                                              uint16 sizeof_lut);
 110:app_hw.c      **** 
 111:app_hw.c      **** /*============================================================================*
 112:app_hw.c      ****  *  Private Function Implementations
 113:app_hw.c      ****  *============================================================================*/
 114:app_hw.c      **** /*----------------------------------------------------------------------------*
 115:app_hw.c      ****  *  NAME
 116:app_hw.c      ****  *      getLevelFromCCTLut
 117:app_hw.c      ****  *
 118:app_hw.c      ****  *  DESCRIPTION
 119:app_hw.c      ****  *      This function linearly interpolates the color value from LUT and
 120:app_hw.c      ****  *      color temperature.
 121:app_hw.c      ****  *
 122:app_hw.c      ****  *  RETURNS
 123:app_hw.c      ****  *      Level of the colour from 0 - 255.
 124:app_hw.c      ****  *
 125:app_hw.c      ****  *---------------------------------------------------------------------------*/
 126:app_hw.c      **** static uint8 getLevelFromCCTLut(uint16 temp, const uint16 *color_lut,
 127:app_hw.c      ****                                              uint16 sizeof_lut)
 128:app_hw.c      **** {
 129:app_hw.c      ****     uint16 idx;
 130:app_hw.c      ****     int16  x2,y2,x1,y1;
 131:app_hw.c      ****     int32  val;
 132:app_hw.c      ****     uint16 thk = temp/CCT_TEMP_FACTOR;
 133:app_hw.c      **** 
 134:app_hw.c      ****     for (idx = 0; idx < sizeof_lut; idx++)
 135:app_hw.c      ****     {
 136:app_hw.c      ****         /* Find the temperature just greater than temperature to be set */
 137:app_hw.c      ****         if (thk < GET_TEMP(color_lut[idx]))
 138:app_hw.c      ****         {
 139:app_hw.c      ****             if (0 == idx)
 140:app_hw.c      ****             {
 141:app_hw.c      ****                 /* if the temperature is less than first LUT element
 142:app_hw.c      ****                  * then saturate at that value.
 143:app_hw.c      ****                  */
 144:app_hw.c      ****                 return GET_LEVEL(color_lut[idx]);
 145:app_hw.c      ****             }
 146:app_hw.c      ****             else
 147:app_hw.c      ****             {
 148:app_hw.c      ****                 /* Get the points on interpolation line
 149:app_hw.c      ****                  * Multiply temperature by unit factor to get value
 150:app_hw.c      ****                  * in Kelvin.
 151:app_hw.c      ****                  */
 152:app_hw.c      ****                 y1 = (int16)GET_LEVEL(color_lut[idx - 1]);
 153:app_hw.c      ****                 x1 = (int16)GET_TEMP(color_lut[idx - 1]) * CCT_TEMP_FACTOR;
 154:app_hw.c      ****                 y2 = (int16)GET_LEVEL(color_lut[idx]);
 155:app_hw.c      ****                 x2 = (int16)GET_TEMP(color_lut[idx]) * CCT_TEMP_FACTOR;
 156:app_hw.c      **** 
 157:app_hw.c      ****                 /* Apply Straight Line interpolation.
 158:app_hw.c      ****                  * y = y1 + ((y2 - y1) * (x -x1))/(x2 - x1)
 159:app_hw.c      ****                  */
 160:app_hw.c      ****                 val = ((int32)(y2 - y1))*((int16)temp - x1);
 161:app_hw.c      ****                 val = (val)/(x2 - x1) + y1;
 162:app_hw.c      **** 
 163:app_hw.c      ****                 /* return the calculated value */
 164:app_hw.c      ****                 return ((uint8)val);
 165:app_hw.c      ****             }
 166:app_hw.c      ****         }
 167:app_hw.c      ****     }
 168:app_hw.c      **** 
 169:app_hw.c      ****     /* If temperature is greater than last element in LUT,
 170:app_hw.c      ****      * saturate to the highest
 171:app_hw.c      ****      */
 172:app_hw.c      ****     return GET_LEVEL(color_lut[sizeof_lut - 1]);
 173:app_hw.c      **** 
 174:app_hw.c      **** }
 175:app_hw.c      **** 
 176:app_hw.c      **** #endif /* COLOUR_TEMP_ENABLED */
 177:app_hw.c      **** 
 178:app_hw.c      **** #ifdef USE_ASSOCIATION_REMOVAL_KEY
 179:app_hw.c      **** /*-----------------------------------------------------------------------------*
 180:app_hw.c      ****  *  NAME
 181:app_hw.c      ****  *      longKeyPressTimeoutHandler
 182:app_hw.c      ****  *
 183:app_hw.c      ****  *  DESCRIPTION
 184:app_hw.c      ****  *      This function handles the long key press timer event.
 185:app_hw.c      ****  *
 186:app_hw.c      ****  *  RETURNS/MODIFIES
 187:app_hw.c      ****  *      Nothing
 188:app_hw.c      ****  *
 189:app_hw.c      ****  *----------------------------------------------------------------------------*/
 190:app_hw.c      **** static void longKeyPressTimeoutHandler(timer_id tid)
 191:app_hw.c      **** {
 192:app_hw.c      ****     if (long_keypress_tid == tid)
 193:app_hw.c      ****     {
 194:app_hw.c      ****         RemoveAssociation();
 195:app_hw.c      ****         long_keypress_tid = TIMER_INVALID;
 196:app_hw.c      ****     }
 197:app_hw.c      **** }
 198:app_hw.c      **** #endif
 199:app_hw.c      **** 
 200:app_hw.c      **** /*============================================================================*
 201:app_hw.c      ****  *  Public function definitions
 202:app_hw.c      ****  *============================================================================*/
 203:app_hw.c      **** 
 204:app_hw.c      **** #ifdef USE_ASSOCIATION_REMOVAL_KEY
 205:app_hw.c      **** #ifdef CSR101x_A05
 206:app_hw.c      **** /*-----------------------------------------------------------------------------*
 207:app_hw.c      ****  *  NAME
 208:app_hw.c      ****  *      HandlePIOChangedEvent
 209:app_hw.c      ****  *
 210:app_hw.c      ****  *  DESCRIPTION
 211:app_hw.c      ****  *      This function handles the PIO Events.
 212:app_hw.c      ****  *
 213:app_hw.c      ****  *  RETURNS/MODIFIES
 214:app_hw.c      ****  *      Nothing
 215:app_hw.c      ****  *
 216:app_hw.c      ****  *----------------------------------------------------------------------------*/
 217:app_hw.c      **** extern void HandlePIOChangedEvent(pio_changed_data *data)
 218:app_hw.c      **** {
 219:app_hw.c      ****     uint32 changed = data->pio_cause & (SW2_MASK);
 220:app_hw.c      ****     /* If SW2 or SW3 event, process further. Ignore otherwise */
 221:app_hw.c      ****     if (changed)
 222:app_hw.c      ****     {
 223:app_hw.c      ****         /* Button Pressed */
 224:app_hw.c      ****         if ((data->pio_state & changed) == 0)
 225:app_hw.c      ****         {
 226:app_hw.c      ****             TimerDelete(long_keypress_tid);
 227:app_hw.c      **** 
 228:app_hw.c      ****             long_keypress_tid = TimerCreate(LONG_KEYPRESS_TIME, TRUE,
 229:app_hw.c      ****                                             longKeyPressTimeoutHandler);
 230:app_hw.c      ****         }
 231:app_hw.c      ****         else /* Button Released */
 232:app_hw.c      ****         {
 233:app_hw.c      ****             if (TIMER_INVALID != long_keypress_tid)
 234:app_hw.c      ****             {
 235:app_hw.c      ****                 /* Button released before long press timeout. Delete the Timer 
 236:app_hw.c      ****                  */
 237:app_hw.c      ****                 TimerDelete(long_keypress_tid);
 238:app_hw.c      ****                 long_keypress_tid = TIMER_INVALID;
 239:app_hw.c      ****             }
 240:app_hw.c      ****         }
 241:app_hw.c      ****     }
 242:app_hw.c      **** }
 243:app_hw.c      **** #else
 244:app_hw.c      **** /*-----------------------------------------------------------------------------*
 245:app_hw.c      ****  *  NAME
 246:app_hw.c      ****  *      HandlePIOChangedEvent
 247:app_hw.c      ****  *
 248:app_hw.c      ****  *  DESCRIPTION
 249:app_hw.c      ****  *      This function handles the PIO Events.
 250:app_hw.c      ****  *
 251:app_hw.c      ****  *  RETURNS/MODIFIES
 252:app_hw.c      ****  *      Nothing
 253:app_hw.c      ****  *
 254:app_hw.c      ****  *----------------------------------------------------------------------------*/
 255:app_hw.c      **** extern void HandlePIOChangedEvent(pio_changed_data *data)
 256:app_hw.c      **** {
 257:app_hw.c      ****     pio_changed_data *event_data;
 258:app_hw.c      ****     pio_mask_t sw3_mask, sw2_mask;
 259:app_hw.c      ****     uint16 sw3_index, sw2_index;
 260:app_hw.c      **** 
 261:app_hw.c      ****     /* The PIO changed data is defined by struct pio_changed_data */
 262:app_hw.c      ****     event_data = (pio_changed_data *)data;
 263:app_hw.c      **** 
 264:app_hw.c      ****     /* Get the IOT switch mask */
 265:app_hw.c      ****     GetIOTSwitchMask(SW3_PIO, &sw3_mask, &sw3_index);
 266:app_hw.c      ****     GetIOTSwitchMask(SW2_PIO, &sw2_mask, &sw2_index);
 267:app_hw.c      **** 
 268:app_hw.c      ****     /* If the PIO event comes from the button */
 269:app_hw.c      ****     if((event_data->pio_cause.mask[sw3_index] & sw3_mask.mask[sw3_index]) ||
 270:app_hw.c      ****        (event_data->pio_cause.mask[sw2_index] & sw2_mask.mask[sw2_index]))
 271:app_hw.c      ****     {
 272:app_hw.c      ****         /* Was this a button pressed report */
 273:app_hw.c      ****         if(!(event_data->pio_state.mask[sw3_index] & sw3_mask.mask[sw3_index])||
 274:app_hw.c      ****            !(event_data->pio_state.mask[sw2_index] & sw2_mask.mask[sw2_index]))
 275:app_hw.c      ****         {
 276:app_hw.c      ****             /* The button was pressed */
 277:app_hw.c      ****             TimerDelete(long_keypress_tid);
 278:app_hw.c      **** 
 279:app_hw.c      ****             long_keypress_tid = TimerCreate(LONG_KEYPRESS_TIME, TRUE,
 280:app_hw.c      ****                                             longKeyPressTimeoutHandler);
 281:app_hw.c      ****         }
 282:app_hw.c      ****         else
 283:app_hw.c      ****         {
 284:app_hw.c      ****             /* The button was released */
 285:app_hw.c      ****             if (TIMER_INVALID != long_keypress_tid)
 286:app_hw.c      ****             {
 287:app_hw.c      ****                 /* Button released before long press timeout. Delete the Timer 
 288:app_hw.c      ****                  */
 289:app_hw.c      ****                 TimerDelete(long_keypress_tid);
 290:app_hw.c      ****                 long_keypress_tid = TIMER_INVALID;
 291:app_hw.c      ****             }
 292:app_hw.c      ****         }
 293:app_hw.c      ****     }    
 294:app_hw.c      **** 
 295:app_hw.c      **** }
 296:app_hw.c      **** #endif /* CSR101x_A05 */
 297:app_hw.c      **** #endif /* USE_ASSOCIATION_REMOVAL_KEY */
 298:app_hw.c      **** 
 299:app_hw.c      **** /*----------------------------------------------------------------------------*
 300:app_hw.c      ****  *  NAME
 301:app_hw.c      ****  *      LightHardwareInit
 302:app_hw.c      ****  *
 303:app_hw.c      ****  *  DESCRIPTION
 304:app_hw.c      ****  *      This function initializes the light hardware, like PIO, interface etc.
 305:app_hw.c      ****  *
 306:app_hw.c      ****  * PARAMETERS
 307:app_hw.c      ****  *      Nothing.
 308:app_hw.c      ****  *
 309:app_hw.c      ****  * RETURNS
 310:app_hw.c      ****  *      Nothing.
 311:app_hw.c      ****  *
 312:app_hw.c      ****  *----------------------------------------------------------------------------*/
 313:app_hw.c      **** extern void LightHardwareInit(void)
 314:app_hw.c      **** {
  20                 	 1 318 0
 315:app_hw.c      ****   
 316:app_hw.c      ****     /* The buttons on the board can be used to remove device association */
 317:app_hw.c      ****     IOTSwitchInit();
  21                 	bra	IOTSwitchInit
  22 0000 00 00 00 00 	.LFE4:
  22      00 E0 
  23                 		.size	LightHardwareInit, .-LightHardwareInit
  24                 		.global	__size_of_LightHardwareInit
  25                 		.equ	__size_of_LightHardwareInit,. - LightHardwareInit
  26                 		.section	.text.HandlePIOChangedEvent,"ax",@progbits
  27                 		.global	HandlePIOChangedEvent
  28                 		.type	HandlePIOChangedEvent, @function
  29                 	HandlePIOChangedEvent:
  30                 	.LFB3:
  31                 		.loc 1 219 0
 219:app_hw.c      **** {
  32                 	er	#0x0003
  33                 	.LCFI0:
  34 0000 03 0B       		ld	X,@$XAP_AL
  35                 		.loc 1 220 0
  36 0001 00 00 00 19 		ld	AL,@(0x0003,X)
 220:app_hw.c      ****     uint32 changed = data->pio_cause & (SW2_MASK);
  37                 	:
  38 0003 03 16       		and	AL,#0x0008
  39                 		.loc 1 222 0
  40 0004 08 C4       	.LVL2:
 222:app_hw.c      ****     if (changed)
  41                 		.L6
  42                 		.loc 1 225 0
  43 0005 00 00 00 00 		and	AL,@(0x0001,X)
  43      00 F4 
 225:app_hw.c      ****         if ((data->pio_state & changed) == 0)
  44                 	L3:
  45 0008 01 C6       		ld	AH,@long_keypress_tid
  46                 		tst	@$XAP_AL
  47 0009 00 00 00 11 		bne	.L5
  48 000b 00 00 00 99 		.loc 1 227 0
  49 000d 00 00 00 00 		ld	AL,@$XAP_AH
  49      00 F0 
 227:app_hw.c      ****             TimerDelete(long_keypress_tid);
  50                 	imerDelete
  51 0010 00 00 00 15 	.LVL4:
  52 0012 00 00 00 00 		.loc 1 229 0
  52      00 9C 
  53                 		ld	AL,#0x0001
 229:app_hw.c      ****             long_keypress_tid = TimerCreate(LONG_KEYPRESS_TIME, TRUE,
  54                 	AL,@(0,Y)
  55 0015 01 14       		ld	AL,#longKeyPressTimeoutHandler
  56 0016 00 27       		st	AL,@(0x0001,Y)
  57 0017 00 00 00 14 		ld	AH,#0x001e
  58 0019 01 27       		ld	AL,#0x8480
  59 001a 1E 10       		bsr	TimerCreate
  60 001b 85 00 80 14 		bra	.L7
  61 001d 00 00 00 00 	.LVL5:
  61      00 9C 
  62 0020 00 00 00 00 	.L5:
  62      00 E0 
  63                 		.loc 1 234 0
  64                 		tst	@$XAP_AH
 234:app_hw.c      ****             if (TIMER_INVALID != long_keypress_tid)
  65                 	loc 1 238 0
  66 0023 00 00 00 99 		ld	AL,@$XAP_AH
  67 0025 00 00 00 00 		bsr	TimerDelete
  67      00 F4 
 238:app_hw.c      ****                 TimerDelete(long_keypress_tid);
  68                 	L6:
  69 0028 00 00 00 15 		.loc 1 239 0
  70 002a 00 00 00 00 		ld	AL,#0x0000
  70      00 9C 
  71                 	.L7:
 239:app_hw.c      ****                 long_keypress_tid = TIMER_INVALID;
  72                 	AL,@long_keypress_tid
  73 002d 00 14       	.LVL7:
  74                 	.L6:
  75 002e 00 00 00 25 		.loc 1 243 0
  76                 		leave	#0x0003
  77                 	.LVL8:
 243:app_hw.c      **** }
  78                 	
  79 0030 03 0F       		.size	HandlePIOChangedEvent, .-HandlePIOChangedEvent
  80                 		.global	__size_of_HandlePIOChangedEvent
  81                 		.equ	__size_of_HandlePIOChangedEvent,. - HandlePIOChangedEvent
  82                 		.section	.text.longKeyPressTimeoutHandler,"ax",@progbits
  83                 		.type	longKeyPressTimeoutHandler, @function
  84                 	longKeyPressTimeoutHandler:
  85                 	.LFB2:
  86                 		.loc 1 192 0
  87                 	.LVL9:
  88                 		enter	#0x0001
 192:app_hw.c      **** {
  89                 	loc 1 193 0
  90                 		ld	AH,@long_keypress_tid
  91 0000 01 0B       		cmp	AH,@$XAP_AL
  92                 		bne	.L10
 193:app_hw.c      ****     if (long_keypress_tid == tid)
  93                 	c 1 195 0
  94 0001 00 00 00 11 		bsr	RemoveAssociation
  95 0003 00 00 00 81 	.LVL10:
  96 0005 00 00 00 00 		.loc 1 196 0
  96      00 F0 
 195:app_hw.c      ****         RemoveAssociation();
  97                 	AL,#0x0000
  98 0008 00 00 00 00 		st	AL,@long_keypress_tid
  98      00 9C 
  99                 	.LVL11:
 196:app_hw.c      ****         long_keypress_tid = TIMER_INVALID;
 100                 	0:
 101 000b 00 14       		.loc 1 198 0
 102 000c 00 00 00 25 		leave	#0x0001
 103                 	.LFE2:
 104                 		.size	longKeyPressTimeoutHandler, .-longKeyPressTimeoutHandler
 198:app_hw.c      **** }
 105                 		__size_of_longKeyPressTimeoutHandler,. - longKeyPressTimeoutHandler
 106 000e 01 0F       		.section	.bss.long_keypress_tid,"aw",@nobits
 107                 		.type	long_keypress_tid, @object
 108                 		.size	long_keypress_tid, 1
 109                 	long_keypress_tid:
 110                 		.space	1
 111                 		.comm light_model_groups, 4, 1
 112                 	
 113                 		.comm power_model_groups, 4, 1
 114 0000 00 00       	
 115                 		.comm attention_model_groups, 4, 1
 116                 	
 117                 		.comm data_model_groups, 4, 1
 118                 	
 119                 		.comm lot_model_groups, 4, 1
 120                 	
 121                 		.section	.debug_frame,"",@progbits
 122                 	.Lframe0:
 123                 		.4byte	.LECIE0-.LSCIE0
 124                 	.LSCIE0:
 125                 		.4byte	0xffffffff
 126                 		.1byte	0x1
 127 0000 00 00 00 00 		.ascii "\000"
 128                 		.1byte	0x1
 129 0002 FF FF FF FF 		.1byte	0x7f
 130 0004 01          		.1byte	0x3
 131 0004 00          		.1byte	0xc
 132 0005 01          		.1byte	0x5
 133 0005 7F          		.1byte	0x0
 134 0006 03          		.p2align	2
 135 0006 0C          	.LECIE0:
 136 0007 05          	.LSFDE0:
 137 0007 00          		.4byte	.LEFDE0-.LASFDE0
 138                 	.LASFDE0:
 139                 		.4byte	.Lframe0
 140                 		.4byte	.LFB4
 141 0008 00 00 00 00 		.4byte	.LFE4-.LFB4
 142                 		.p2align	2
 143 000a 00 00 00 00 	.LEFDE0:
 144 000c 00 00 00 00 	.LSFDE2:
 145 000e 00 00 00 00 		.4byte	.LEFDE2-.LASFDE2
 146                 	.LASFDE2:
 147                 		.4byte	.Lframe0
 148                 		.4byte	.LFB3
 149 0010 00 00 00 00 		.4byte	.LFE3-.LFB3
 150                 		.1byte	0x4
 151 0012 00 00 00 00 		.4byte	.LCFI0-.LFB3
 152 0014 00 00 00 00 		.1byte	0xe
 153 0016 00 00 00 00 		.1byte	0x3
 154 0018 41          		.1byte	0x83
 155                 		.1byte	0x1
 156 0018 0E          		.p2align	2
 157 0019 03          	.LEFDE2:
 158 0019 83          	.LSFDE4:
 159 001a 01          		.4byte	.LEFDE4-.LASFDE4
 160 001a 00 00 00    	.LASFDE4:
 161                 		.4byte	.Lframe0
 162                 		.4byte	.LFB2
 163 001c 00 00 00 00 		.4byte	.LFE2-.LFB2
 164                 		.1byte	0x4
 165 001e 00 00 00 00 		.4byte	.LCFI1-.LFB2
 166 0020 00 00 00 00 		.1byte	0xe
 167 0022 00 00 00 00 		.1byte	0x1
 168 0024 41          		.1byte	0x83
 169                 		.1byte	0x1
 170 0024 0E          		.p2align	2
 171 0025 01          	.LEFDE4:
 172 0025 83          		.text
 173 0026 01          	.Letext0:
 174 0026 00 00 00    		.section	.debug_loc,"",@progbits
 175                 	.Ldebug_loc0:
 176                 	.LLST1:
 177                 		.4byte	.LFB3
 178                 		.4byte	.LCFI0
 179                 		.2byte	0x1
 180                 		.1byte	0x55
 181 0000 00 00 00 00 		.4byte	.LCFI0
 182 0002 00 00 00 00 		.4byte	.LFE3
 183 0004 00 01       		.2byte	0x2
 184 0005 55          		.1byte	0x75
 185 0005 00 00 00 00 		.1byte	0x3
 186 0007 00 00 00 00 		.4byte	0x0
 187 0009 00 02       		.4byte	0x0
 188 000a 75          	.LLST2:
 189 000b 03          		.4byte	.LVL0
 190 000b 00 00 00 00 		.4byte	.LVL1
 191 000d 00 00 00 00 		.2byte	0x1
 192                 		.1byte	0x51
 193 000f 00 00 00 00 		.4byte	.LVL1
 194 0011 00 00 00 00 		.4byte	.LVL4
 195 0013 00 01       		.2byte	0x1
 196 0014 51          		.1byte	0x53
 197 0015 00 00 00 00 		.4byte	.LVL5
 198 0017 00 00 00 00 		.4byte	.LVL6
 199 0019 00 01       		.2byte	0x1
 200 001a 53          		.1byte	0x53
 201 001a 00 00 00 00 		.4byte	.LVL7
 202 001c 00 00 00 00 		.4byte	.LVL8
 203 001e 00 01       		.2byte	0x1
 204 001f 53          		.1byte	0x53
 205 0020 00 00 00 00 		.4byte	0x0
 206 0022 00 00 00 00 		.4byte	0x0
 207 0024 00 01       	.LLST3:
 208 0025 53          		.4byte	.LFB2
 209 0025 00 00 00 00 		.4byte	.LCFI1
 210 0027 00 00 00 00 		.2byte	0x1
 211                 		.1byte	0x55
 212 0029 00 00 00 00 		.4byte	.LCFI1
 213 002b 00 00 00 00 		.4byte	.LFE2
 214 002d 00 01       		.2byte	0x2
 215 002e 55          		.1byte	0x75
 216 002f 00 00 00 00 		.1byte	0x1
 217 0031 00 00 00 00 		.4byte	0x0
 218 0033 00 02       		.4byte	0x0
 219 0034 75          	.LLST4:
 220 0034 01          		.4byte	.LVL9
 221 0035 00 00 00 00 		.4byte	.LVL10
 222 0037 00 00 00 00 		.2byte	0x1
 223                 		.1byte	0x51
 224 0039 00 00 00 00 		.4byte	.LVL11
 225 003b 00 00 00 00 		.4byte	.LFE2
 226 003d 00 01       		.2byte	0x1
 227 003e 51          		.1byte	0x51
 228 003e 00 00 00 00 		.4byte	0x0
 229 0040 00 00 00 00 		.4byte	0x0
 230 0042 00 01       		.file 2 "C:/CSR_uEnergy_SDK-2.6.3.11/tools/include/CSR101x_A05/types.h"
 231 0043 51          		.file 3 "C:/CSR_uEnergy_SDK-2.6.3.11/tools/include/CSR101x_A05/timer.h"
 232 0044 00 00 00 00 		.file 4 "C:/CSR_uEnergy_SDK-2.6.3.11/tools/include/CSR101x_A05/sys_events.h"
 233 0046 00 00 00 00 		.file 5 "app_mesh_handler.h"
 234                 		.section	.debug_info
 235                 		.4byte	0x1a3
 236                 		.2byte	0x2
 237                 		.4byte	.Ldebug_abbrev0
 238                 		.1byte	0x4
 239 0000 00 00 01 A3 		.1byte	0x1
 240 0002 00 02       		.4byte	.LASF20
 241 0003 00 00 00 00 		.1byte	0x1
 242 0005 04          		.4byte	.LASF21
 243 0005 01          		.4byte	.LASF22
 244 0006 00 00 00 00 		.4byte	0x0
 245 0008 01          		.4byte	0x0
 246 0008 00 00 00 00 		.4byte	.Ldebug_ranges0+0x0
 247 000a 00 00 00 00 		.4byte	.Ldebug_line0
 248 000c 00 00 00 00 		.1byte	0x2
 249 000e 00 00 00 00 		.1byte	0x2
 250 0010 00 00 00 00 		.1byte	0x8
 251 0012 00 00 00 00 		.4byte	.LASF0
 252 0014 02          		.1byte	0x3
 253 0015 02          		.4byte	.LASF2
 254 0015 08          		.1byte	0x2
 255 0016 00 00 00 00 		.1byte	0x21
 256 0018 03          		.4byte	0x3b
 257 0018 00 00 00 00 		.1byte	0x2
 258 001a 02          		.1byte	0x2
 259 001b 21          		.1byte	0x7
 260 001b 00 00 00 3B 		.4byte	.LASF1
 261 001d 02          		.1byte	0x3
 262 001e 02          		.4byte	.LASF3
 263 001e 07          		.1byte	0x2
 264 001f 00 00 00 00 		.1byte	0x22
 265 0021 03          		.4byte	0x4d
 266 0021 00 00 00 00 		.1byte	0x2
 267 0023 02          		.1byte	0x4
 268 0024 22          		.1byte	0x7
 269 0024 00 00 00 4D 		.4byte	.LASF4
 270 0026 02          		.1byte	0x2
 271 0027 04          		.1byte	0x2
 272 0027 07          		.1byte	0x6
 273 0028 00 00 00 00 		.4byte	.LASF5
 274 002a 02          		.1byte	0x2
 275 002a 02          		.1byte	0x2
 276 002b 06          		.1byte	0x5
 277 002b 00 00 00 00 		.4byte	.LASF6
 278 002d 02          		.1byte	0x2
 279 002e 02          		.1byte	0x4
 280 002e 05          		.1byte	0x5
 281 002f 00 00 00 00 		.4byte	.LASF7
 282 0031 02          		.1byte	0x2
 283 0031 04          		.1byte	0x2
 284 0032 05          		.1byte	0x7
 285 0032 00 00 00 00 		.4byte	.LASF8
 286 0034 02          		.1byte	0x4
 287 0035 02          		.1byte	0x2
 288 0035 07          		.1byte	0x7
 289 0036 00 00 00 00 		.1byte	0x3
 290 0038 04          		.4byte	.LASF9
 291 0038 02          		.1byte	0x3
 292 0039 07          		.1byte	0x27
 293 0039 03          		.4byte	0x30
 294 003a 00 00 00 00 		.1byte	0x5
 295 003c 03          		.1byte	0x8
 296 003c 27          		.1byte	0x4
 297 003d 00 00 00 30 		.1byte	0x50
 298 003f 05          		.4byte	0xa3
 299 003f 08          		.1byte	0x6
 300 0040 04          		.4byte	.LASF10
 301 0040 50          		.1byte	0x4
 302 0041 00 00 00 A3 		.1byte	0x52
 303 0043 06          		.4byte	0x42
 304 0043 00 00 00 00 		.1byte	0x2
 305 0045 04          		.1byte	0x23
 306 0046 52          		.1byte	0x0
 307 0046 00 00 00 42 		.1byte	0x6
 308 0048 02          		.4byte	.LASF11
 309 0049 23          		.1byte	0x4
 310 0049 00          		.1byte	0x58
 311 004a 06          		.4byte	0x42
 312 004a 00 00 00 00 		.1byte	0x2
 313 004c 04          		.1byte	0x23
 314 004d 58          		.1byte	0x2
 315 004d 00 00 00 42 		.1byte	0x0
 316 004f 02          		.1byte	0x3
 317 0050 23          		.4byte	.LASF12
 318 0050 02          		.1byte	0x4
 319 0051 00          		.1byte	0x5a
 320 0051 03          		.4byte	0x7e
 321 0052 00 00 00 00 		.1byte	0x2
 322 0054 04          		.1byte	0x2
 323 0054 5A          		.1byte	0x8
 324 0055 00 00 00 7E 		.4byte	.LASF13
 325 0057 02          		.1byte	0x7
 326 0057 02          		.1byte	0x1
 327 0058 08          		.4byte	.LASF23
 328 0058 00 00 00 00 		.1byte	0x1
 329 005a 07          		.2byte	0x13b
 330 005b 01          		.1byte	0x1
 331 005b 00 00 00 00 		.4byte	.LFB4
 332 005d 01          		.4byte	.LFE4
 333 005e 01 3B       		.1byte	0x1
 334 005f 01          		.1byte	0x55
 335 005f 00 00 00 00 		.1byte	0x8
 336 0061 00 00 00 00 		.1byte	0x1
 337 0063 01          		.4byte	.LASF24
 338 0064 55          		.1byte	0x1
 339 0064 08          		.1byte	0xdb
 340 0065 01          		.1byte	0x1
 341 0065 00 00 00 00 		.4byte	.LFB3
 342 0067 01          		.4byte	.LFE3
 343 0068 DB          		.4byte	.LLST1
 344 0068 01          		.4byte	0xfd
 345 0069 00 00 00 00 		.1byte	0x9
 346 006b 00 00 00 00 		.4byte	.LASF14
 347 006d 00 00 00 00 		.1byte	0x1
 348 006f 00 00 00 FD 		.1byte	0xda
 349 0071 09          		.4byte	0xfd
 350 0071 00 00 00 00 		.4byte	.LLST2
 351 0073 01          		.1byte	0xa
 352 0074 DA          		.4byte	.LASF25
 353 0074 00 00 00 FD 		.1byte	0x1
 354 0076 00 00 00 00 		.1byte	0xdc
 355 0078 0A          		.4byte	0x42
 356 0079 00 00 00 00 		.1byte	0x0
 357 007b 01          		.1byte	0xb
 358 007b DC          		.1byte	0x2
 359 007c 00 00 00 42 		.4byte	0xa3
 360 007e 00          		.1byte	0xc
 361 007e 0B          		.4byte	.LASF26
 362 007f 02          		.1byte	0x1
 363 007f 00 00 00 A3 		.1byte	0xc0
 364 0081 0C          		.1byte	0x1
 365 0082 00 00 00 00 		.4byte	.LFB2
 366 0084 01          		.4byte	.LFE2
 367 0084 C0          		.4byte	.LLST3
 368 0085 01          		.4byte	0x12b
 369 0085 00 00 00 00 		.1byte	0xd
 370 0087 00 00 00 00 		.ascii "tid\000"
 371 0089 00 00 00 00 		.1byte	0x1
 372 008b 00 00 01 2B 		.1byte	0xbf
 373 008d 0D          		.4byte	0x73
 374 008e 74 69 64 00 		.4byte	.LLST4
 375 0090 01          		.1byte	0x0
 376 0090 BF          		.1byte	0xe
 377 0091 00 00 00 73 		.4byte	.LASF27
 378 0093 00 00 00 00 		.1byte	0x1
 379 0095 00          		.1byte	0x2f
 380 0095 0E          		.4byte	0x73
 381 0096 00 00 00 00 		.1byte	0x5
 382 0098 01          		.1byte	0x3
 383 0098 2F          		.4byte	long_keypress_tid
 384 0099 00 00 00 73 		.1byte	0xf
 385 009b 05          		.4byte	0x30
 386 009b 03          		.4byte	0x14c
 387 009c 00 00 00 00 		.1byte	0x10
 388 009e 0F          		.4byte	0x70
 389 009e 00 00 00 30 		.1byte	0x3
 390 00a0 00 00 01 4C 		.1byte	0x0
 391 00a2 10          		.1byte	0x11
 392 00a3 00 00 00 70 		.4byte	.LASF15
 393 00a5 03          		.1byte	0x5
 394 00a5 00          		.1byte	0x16
 395 00a6 11          		.4byte	0x13c
 396 00a6 00 00 00 00 		.1byte	0x1
 397 00a8 05          		.1byte	0x5
 398 00a9 16          		.1byte	0x3
 399 00a9 00 00 01 3C 		.4byte	light_model_groups
 400 00ab 01          		.1byte	0x11
 401 00ac 05          		.4byte	.LASF16
 402 00ac 03          		.1byte	0x5
 403 00ad 00 00 00 00 		.1byte	0x17
 404 00af 11          		.4byte	0x13c
 405 00af 00 00 00 00 		.1byte	0x1
 406 00b1 05          		.1byte	0x5
 407 00b2 17          		.1byte	0x3
 408 00b2 00 00 01 3C 		.4byte	power_model_groups
 409 00b4 01          		.1byte	0x11
 410 00b5 05          		.4byte	.LASF17
 411 00b5 03          		.1byte	0x5
 412 00b6 00 00 00 00 		.1byte	0x18
 413 00b8 11          		.4byte	0x13c
 414 00b8 00 00 00 00 		.1byte	0x1
 415 00ba 05          		.1byte	0x5
 416 00bb 18          		.1byte	0x3
 417 00bb 00 00 01 3C 		.4byte	attention_model_groups
 418 00bd 01          		.1byte	0x11
 419 00be 05          		.4byte	.LASF18
 420 00be 03          		.1byte	0x5
 421 00bf 00 00 00 00 		.1byte	0x19
 422 00c1 11          		.4byte	0x13c
 423 00c1 00 00 00 00 		.1byte	0x1
 424 00c3 05          		.1byte	0x5
 425 00c4 19          		.1byte	0x3
 426 00c4 00 00 01 3C 		.4byte	data_model_groups
 427 00c6 01          		.1byte	0x11
 428 00c7 05          		.4byte	.LASF19
 429 00c7 03          		.1byte	0x5
 430 00c8 00 00 00 00 		.1byte	0x1a
 431 00ca 11          		.4byte	0x13c
 432 00ca 00 00 00 00 		.1byte	0x1
 433 00cc 05          		.1byte	0x5
 434 00cd 1A          		.1byte	0x3
 435 00cd 00 00 01 3C 		.4byte	lot_model_groups
 436 00cf 01          		.1byte	0x0
 437 00d0 05          		.section	.debug_abbrev
 438 00d0 03          		.1byte	0x1
 439 00d1 00 00 00 00 		.1byte	0x11
 440 00d3 00          		.1byte	0x1
 441                 		.1byte	0x25
 442 0000 01          		.1byte	0xe
 443 0000 11          		.1byte	0x13
 444 0001 01          		.1byte	0xb
 445 0001 25          		.1byte	0x3
 446 0002 0E          		.1byte	0xe
 447 0002 13          		.1byte	0x1b
 448 0003 0B          		.1byte	0xe
 449 0003 03          		.1byte	0x11
 450 0004 0E          		.1byte	0x1
 451 0004 1B          		.1byte	0x52
 452 0005 0E          		.1byte	0x1
 453 0005 11          		.1byte	0x55
 454 0006 01          		.1byte	0x6
 455 0006 52          		.1byte	0x10
 456 0007 01          		.1byte	0x6
 457 0007 55          		.1byte	0x0
 458 0008 06          		.1byte	0x0
 459 0008 10          		.1byte	0x2
 460 0009 06          		.1byte	0x24
 461 0009 00          		.1byte	0x0
 462 000a 00          		.1byte	0xb
 463 000a 02          		.1byte	0xb
 464 000b 24          		.1byte	0x3e
 465 000b 00          		.1byte	0xb
 466 000c 0B          		.1byte	0x3
 467 000c 0B          		.1byte	0xe
 468 000d 3E          		.1byte	0x0
 469 000d 0B          		.1byte	0x0
 470 000e 03          		.1byte	0x3
 471 000e 0E          		.1byte	0x16
 472 000f 00          		.1byte	0x0
 473 000f 00          		.1byte	0x3
 474 0010 03          		.1byte	0xe
 475 0010 16          		.1byte	0x3a
 476 0011 00          		.1byte	0xb
 477 0011 03          		.1byte	0x3b
 478 0012 0E          		.1byte	0xb
 479 0012 3A          		.1byte	0x49
 480 0013 0B          		.1byte	0x13
 481 0013 3B          		.1byte	0x0
 482 0014 0B          		.1byte	0x0
 483 0014 49          		.1byte	0x4
 484 0015 13          		.1byte	0x24
 485 0015 00          		.1byte	0x0
 486 0016 00          		.1byte	0xb
 487 0016 04          		.1byte	0xb
 488 0017 24          		.1byte	0x3e
 489 0017 00          		.1byte	0xb
 490 0018 0B          		.1byte	0x0
 491 0018 0B          		.1byte	0x0
 492 0019 3E          		.1byte	0x5
 493 0019 0B          		.1byte	0x13
 494 001a 00          		.1byte	0x1
 495 001a 00          		.1byte	0xb
 496 001b 05          		.1byte	0xb
 497 001b 13          		.1byte	0x3a
 498 001c 01          		.1byte	0xb
 499 001c 0B          		.1byte	0x3b
 500 001d 0B          		.1byte	0xb
 501 001d 3A          		.1byte	0x1
 502 001e 0B          		.1byte	0x13
 503 001e 3B          		.1byte	0x0
 504 001f 0B          		.1byte	0x0
 505 001f 01          		.1byte	0x6
 506 0020 13          		.1byte	0xd
 507 0020 00          		.1byte	0x0
 508 0021 00          		.1byte	0x3
 509 0021 06          		.1byte	0xe
 510 0022 0D          		.1byte	0x3a
 511 0022 00          		.1byte	0xb
 512 0023 03          		.1byte	0x3b
 513 0023 0E          		.1byte	0xb
 514 0024 3A          		.1byte	0x49
 515 0024 0B          		.1byte	0x13
 516 0025 3B          		.1byte	0x38
 517 0025 0B          		.1byte	0xa
 518 0026 49          		.1byte	0x0
 519 0026 13          		.1byte	0x0
 520 0027 38          		.1byte	0x7
 521 0027 0A          		.1byte	0x2e
 522 0028 00          		.1byte	0x0
 523 0028 00          		.1byte	0x3f
 524 0029 07          		.1byte	0xc
 525 0029 2E          		.1byte	0x3
 526 002a 00          		.1byte	0xe
 527 002a 3F          		.1byte	0x3a
 528 002b 0C          		.1byte	0xb
 529 002b 03          		.1byte	0x3b
 530 002c 0E          		.1byte	0x5
 531 002c 3A          		.1byte	0x27
 532 002d 0B          		.1byte	0xc
 533 002d 3B          		.1byte	0x11
 534 002e 05          		.1byte	0x1
 535 002e 27          		.1byte	0x12
 536 002f 0C          		.1byte	0x1
 537 002f 11          		.1byte	0x40
 538 0030 01          		.1byte	0xa
 539 0030 12          		.1byte	0x0
 540 0031 01          		.1byte	0x0
 541 0031 40          		.1byte	0x8
 542 0032 0A          		.1byte	0x2e
 543 0032 00          		.1byte	0x1
 544 0033 00          		.1byte	0x3f
 545 0033 08          		.1byte	0xc
 546 0034 2E          		.1byte	0x3
 547 0034 01          		.1byte	0xe
 548 0035 3F          		.1byte	0x3a
 549 0035 0C          		.1byte	0xb
 550 0036 03          		.1byte	0x3b
 551 0036 0E          		.1byte	0xb
 552 0037 3A          		.1byte	0x27
 553 0037 0B          		.1byte	0xc
 554 0038 3B          		.1byte	0x11
 555 0038 0B          		.1byte	0x1
 556 0039 27          		.1byte	0x12
 557 0039 0C          		.1byte	0x1
 558 003a 11          		.1byte	0x40
 559 003a 01          		.1byte	0x6
 560 003b 12          		.1byte	0x1
 561 003b 01          		.1byte	0x13
 562 003c 40          		.1byte	0x0
 563 003c 06          		.1byte	0x0
 564 003d 01          		.1byte	0x9
 565 003d 13          		.1byte	0x5
 566 003e 00          		.1byte	0x0
 567 003e 00          		.1byte	0x3
 568 003f 09          		.1byte	0xe
 569 003f 05          		.1byte	0x3a
 570 0040 00          		.1byte	0xb
 571 0040 03          		.1byte	0x3b
 572 0041 0E          		.1byte	0xb
 573 0041 3A          		.1byte	0x49
 574 0042 0B          		.1byte	0x13
 575 0042 3B          		.1byte	0x2
 576 0043 0B          		.1byte	0x6
 577 0043 49          		.1byte	0x0
 578 0044 13          		.1byte	0x0
 579 0044 02          		.1byte	0xa
 580 0045 06          		.1byte	0x34
 581 0045 00          		.1byte	0x0
 582 0046 00          		.1byte	0x3
 583 0046 0A          		.1byte	0xe
 584 0047 34          		.1byte	0x3a
 585 0047 00          		.1byte	0xb
 586 0048 03          		.1byte	0x3b
 587 0048 0E          		.1byte	0xb
 588 0049 3A          		.1byte	0x49
 589 0049 0B          		.1byte	0x13
 590 004a 3B          		.1byte	0x0
 591 004a 0B          		.1byte	0x0
 592 004b 49          		.1byte	0xb
 593 004b 13          		.1byte	0xf
 594 004c 00          		.1byte	0x0
 595 004c 00          		.1byte	0xb
 596 004d 0B          		.1byte	0xb
 597 004d 0F          		.1byte	0x49
 598 004e 00          		.1byte	0x13
 599 004e 0B          		.1byte	0x0
 600 004f 0B          		.1byte	0x0
 601 004f 49          		.1byte	0xc
 602 0050 13          		.1byte	0x2e
 603 0050 00          		.1byte	0x1
 604 0051 00          		.1byte	0x3
 605 0051 0C          		.1byte	0xe
 606 0052 2E          		.1byte	0x3a
 607 0052 01          		.1byte	0xb
 608 0053 03          		.1byte	0x3b
 609 0053 0E          		.1byte	0xb
 610 0054 3A          		.1byte	0x27
 611 0054 0B          		.1byte	0xc
 612 0055 3B          		.1byte	0x11
 613 0055 0B          		.1byte	0x1
 614 0056 27          		.1byte	0x12
 615 0056 0C          		.1byte	0x1
 616 0057 11          		.1byte	0x40
 617 0057 01          		.1byte	0x6
 618 0058 12          		.1byte	0x1
 619 0058 01          		.1byte	0x13
 620 0059 40          		.1byte	0x0
 621 0059 06          		.1byte	0x0
 622 005a 01          		.1byte	0xd
 623 005a 13          		.1byte	0x5
 624 005b 00          		.1byte	0x0
 625 005b 00          		.1byte	0x3
 626 005c 0D          		.1byte	0x8
 627 005c 05          		.1byte	0x3a
 628 005d 00          		.1byte	0xb
 629 005d 03          		.1byte	0x3b
 630 005e 08          		.1byte	0xb
 631 005e 3A          		.1byte	0x49
 632 005f 0B          		.1byte	0x13
 633 005f 3B          		.1byte	0x2
 634 0060 0B          		.1byte	0x6
 635 0060 49          		.1byte	0x0
 636 0061 13          		.1byte	0x0
 637 0061 02          		.1byte	0xe
 638 0062 06          		.1byte	0x34
 639 0062 00          		.1byte	0x0
 640 0063 00          		.1byte	0x3
 641 0063 0E          		.1byte	0xe
 642 0064 34          		.1byte	0x3a
 643 0064 00          		.1byte	0xb
 644 0065 03          		.1byte	0x3b
 645 0065 0E          		.1byte	0xb
 646 0066 3A          		.1byte	0x49
 647 0066 0B          		.1byte	0x13
 648 0067 3B          		.1byte	0x2
 649 0067 0B          		.1byte	0xa
 650 0068 49          		.1byte	0x0
 651 0068 13          		.1byte	0x0
 652 0069 02          		.1byte	0xf
 653 0069 0A          		.1byte	0x1
 654 006a 00          		.1byte	0x1
 655 006a 00          		.1byte	0x49
 656 006b 0F          		.1byte	0x13
 657 006b 01          		.1byte	0x1
 658 006c 01          		.1byte	0x13
 659 006c 49          		.1byte	0x0
 660 006d 13          		.1byte	0x0
 661 006d 01          		.1byte	0x10
 662 006e 13          		.1byte	0x21
 663 006e 00          		.1byte	0x0
 664 006f 00          		.1byte	0x49
 665 006f 10          		.1byte	0x13
 666 0070 21          		.1byte	0x2f
 667 0070 00          		.1byte	0xb
 668 0071 49          		.1byte	0x0
 669 0071 13          		.1byte	0x0
 670 0072 2F          		.1byte	0x11
 671 0072 0B          		.1byte	0x34
 672 0073 00          		.1byte	0x0
 673 0073 00          		.1byte	0x3
 674 0074 11          		.1byte	0xe
 675 0074 34          		.1byte	0x3a
 676 0075 00          		.1byte	0xb
 677 0075 03          		.1byte	0x3b
 678 0076 0E          		.1byte	0xb
 679 0076 3A          		.1byte	0x49
 680 0077 0B          		.1byte	0x13
 681 0077 3B          		.1byte	0x3f
 682 0078 0B          		.1byte	0xc
 683 0078 49          		.1byte	0x2
 684 0079 13          		.1byte	0xa
 685 0079 3F          		.1byte	0x0
 686 007a 0C          		.1byte	0x0
 687 007a 02          		.1byte	0x0
 688 007b 0A          		.section	.debug_pubnames,"",@progbits
 689 007b 00          		.4byte	0xb2
 690 007c 00          		.2byte	0x2
 691 007c 00          		.4byte	.Ldebug_info0
 692                 		.4byte	0x1a7
 693 0000 00 00 00 B2 		.4byte	0xb5
 694 0002 00 02       		.ascii "LightHardwareInit\000"
 695 0003 00 00 00 00 		.4byte	0xc9
 696 0005 00 00 01 A7 		.ascii "HandlePIOChangedEvent\000"
 697 0007 00 00 00 B5 		.4byte	0x14c
 698 0009 4C 69 67 68 		.ascii "light_model_groups\000"
 698      74 48 61 72 
 698      64 77 61 72 
 698      65 49 6E 69 
 698      74 00 
 699 0012 00 00 00 C9 		.4byte	0x15e
 700 0014 48 61 6E 64 		.ascii "power_model_groups\000"
 700      6C 65 50 49 
 700      4F 43 68 61 
 700      6E 67 65 64 
 700      45 76 65 6E 
 701 001f 00 00 01 4C 		.4byte	0x170
 702 0021 6C 69 67 68 		.ascii "attention_model_groups\000"
 702      74 5F 6D 6F 
 702      64 65 6C 5F 
 702      67 72 6F 75 
 702      70 73 00 
 703 002a 00 00 01 5E 		.4byte	0x182
 704 002c 70 6F 77 65 		.ascii "data_model_groups\000"
 704      72 5F 6D 6F 
 704      64 65 6C 5F 
 704      67 72 6F 75 
 704      70 73 00 
 705 0036 00 00 01 70 		.4byte	0x194
 706 0038 61 74 74 65 		.ascii "lot_model_groups\000"
 706      6E 74 69 6F 
 706      6E 5F 6D 6F 
 706      64 65 6C 5F 
 706      67 72 6F 75 
 707 0043 00 00 01 82 		.4byte	0x0
 708 0045 64 61 74 61 		.section	.debug_aranges,"",@progbits
 708      5F 6D 6F 64 
 708      65 6C 5F 67 
 708      72 6F 75 70 
 708      73 00 
 709 004e 00 00 01 94 		.4byte	0x2c
 710 0050 6C 6F 74 5F 		.2byte	0x2
 710      6D 6F 64 65 
 710      6C 5F 67 72 
 710      6F 75 70 73 
 710      00 
 711 0059 00 00 00 00 		.4byte	.Ldebug_info0
 712                 		.1byte	0x4
 713 0000 00 00 00 2C 		.1byte	0x0
 714 0002 00 02       		.2byte	0x0
 715 0003 00 00 00 00 		.2byte	0x0
 716 0005 04          		.4byte	.LFB4
 717 0005 00          		.4byte	.LFE4-.LFB4
 718 0006 00 00       		.4byte	.LFB3
 719 0007 00 00       		.4byte	.LFE3-.LFB3
 720 0008 00 00 00 00 		.4byte	.LFB2
 721 000a 00 00 00 00 		.4byte	.LFE2-.LFB2
 722 000c 00 00 00 00 		.4byte	0x0
 723 000e 00 00 00 00 		.4byte	0x0
 724 0010 00 00 00 00 		.section	.debug_ranges,"",@progbits
 725 0012 00 00 00 00 	.Ldebug_ranges0:
 726 0014 00 00 00 00 		.4byte	.Ltext0
 727 0016 00 00 00 00 		.4byte	.Letext0
 728                 		.4byte	.LFB4
 729                 		.4byte	.LFE4
 730 0000 00 00 00 00 		.4byte	.LFB3
 731 0002 00 00 00 00 		.4byte	.LFE3
 732 0004 00 00 00 00 		.4byte	.LFB2
 733 0006 00 00 00 00 		.4byte	.LFE2
 734 0008 00 00 00 00 		.4byte	0x0
 735 000a 00 00 00 00 		.4byte	0x0
 736 000c 00 00 00 00 		.section	.debug_str,"MS",@progbits,1
 737 000e 00 00 00 00 	.LASF9:
 738 0010 00 00 00 00 		.ascii "timer_id\000"
 739 0012 00 00 00 00 	.LASF8:
 740                 		.ascii "unsigned int\000"
 741                 	.LASF26:
 742 0000 74 69 6D 65 		.ascii "longKeyPressTimeoutHandler\000"
 742      72 5F 69 64 
 742      00 
 743                 	.LASF3:
 744 0004 75 6E 73 69 		.ascii "uint32\000"
 744      67 6E 65 64 
 744      20 69 6E 74 
 744      00 
 745                 	.LASF15:
 746 000b 6C 6F 6E 67 		.ascii "light_model_groups\000"
 746      4B 65 79 50 
 746      72 65 73 73 
 746      54 69 6D 65 
 746      6F 75 74 48 
 747                 	.LASF14:
 748 0018 75 69 6E 74 		.ascii "data\000"
 748      33 32 00 
 749                 	.LASF23:
 750 001c 6C 69 67 68 		.ascii "LightHardwareInit\000"
 750      74 5F 6D 6F 
 750      64 65 6C 5F 
 750      67 72 6F 75 
 750      70 73 00 
 751                 	.LASF4:
 752 0025 64 61 74 61 		.ascii "long unsigned int\000"
 752      00 
 753                 	.LASF22:
 754 0028 4C 69 67 68 		.ascii "F:\\C\\ArrayStorm\\CSR\\Software\\CSRmesh-1.3-Examples-Applications_icp\\applications\\Arr
 754      74 48 61 72 
 754      64 77 61 72 
 754      65 49 6E 69 
 754      74 00 
 755                 	.LASF21:
 756 0031 6C 6F 6E 67 		.ascii "app_hw.c\000"
 756      20 75 6E 73 
 756      69 67 6E 65 
 756      64 20 69 6E 
 756      74 00 
 757                 	.LASF11:
 758 003a 46 3A 5C 43 		.ascii "pio_cause\000"
 758      5C 41 72 72 
 758      61 79 53 74 
 758      6F 72 6D 5C 
 758      43 53 52 5C 
 759                 	.LASF1:
 760 008e 61 70 70 5F 		.ascii "short unsigned int\000"
 760      68 77 2E 63 
 760      00 
 761                 	.LASF19:
 762 0093 70 69 6F 5F 		.ascii "lot_model_groups\000"
 762      63 61 75 73 
 762      65 00 
 763                 	.LASF16:
 764 0098 73 68 6F 72 		.ascii "power_model_groups\000"
 764      74 20 75 6E 
 764      73 69 67 6E 
 764      65 64 20 69 
 764      6E 74 00 
 765                 	.LASF25:
 766 00a1 6C 6F 74 5F 		.ascii "changed\000"
 766      6D 6F 64 65 
 766      6C 5F 67 72 
 766      6F 75 70 73 
 766      00 
 767                 	.LASF0:
 768 00aa 70 6F 77 65 		.ascii "unsigned char\000"
 768      72 5F 6D 6F 
 768      64 65 6C 5F 
 768      67 72 6F 75 
 768      70 73 00 
 769                 	.LASF13:
 770 00b3 63 68 61 6E 		.ascii "char\000"
 770      67 65 64 00 
 771                 	.LASF7:
 772 00b7 75 6E 73 69 		.ascii "long int\000"
 772      67 6E 65 64 
 772      20 63 68 61 
 772      72 00 
 773                 	.LASF20:
 774 00be 63 68 61 72 		.ascii "GNU C 4.3.4 CSR version 29 for xap []\000"
 774      00 
 775                 	.LASF27:
 776 00c1 6C 6F 6E 67 		.ascii "long_keypress_tid\000"
 776      20 69 6E 74 
 776      00 
 777                 	.LASF24:
 778 00c5 47 4E 55 20 		.ascii "HandlePIOChangedEvent\000"
 778      43 20 34 2E 
 778      33 2E 34 20 
 778      43 53 52 20 
 778      76 65 72 73 
 779                 	.LASF12:
 780 00d8 6C 6F 6E 67 		.ascii "pio_changed_data\000"
 780      5F 6B 65 79 
 780      70 72 65 73 
 780      73 5F 74 69 
 780      64 00 
 781                 	.LASF5:
 782 00e1 48 61 6E 64 		.ascii "signed char\000"
 782      6C 65 50 49 
 782      4F 43 68 61 
 782      6E 67 65 64 
 782      45 76 65 6E 
 783                 	.LASF17:
 784 00ec 70 69 6F 5F 		.ascii "attention_model_groups\000"
 784      63 68 61 6E 
 784      67 65 64 5F 
 784      64 61 74 61 
 784      00 
 785                 	.LASF10:
 786 00f5 73 69 67 6E 		.ascii "pio_state\000"
 786      65 64 20 63 
 786      68 61 72 00 
 787                 	.LASF6:
 788 00fb 61 74 74 65 		.ascii "short int\000"
 788      6E 74 69 6F 
 788      6E 5F 6D 6F 
 788      64 65 6C 5F 
 788      67 72 6F 75 
 789                 	.LASF2:
 790 0106 70 69 6F 5F 		.ascii "uint16\000"
 790      73 74 61 74 
 790      65 00 
 791                 	.LASF18:
 792 010b 73 68 6F 72 		.ascii "data_model_groups\000"
 792      74 20 69 6E 
 792      74 00 
 793                 		.ident	"GCC: (GNU) 4.3.4 CSR version 29 for xap []"
 794 0110 75 69 6E 74 	...
 794      31 36 00 
