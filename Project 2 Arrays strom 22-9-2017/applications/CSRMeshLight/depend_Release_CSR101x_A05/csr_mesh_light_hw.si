   1                 		.file	"csr_mesh_light_hw.c"
   2                 		.variant xap2+
   3                 	
   4                 		.small
   5                 	
   6                 		.section	.debug_abbrev,"",@progbits
   7                 	.Ldebug_abbrev0:
   8                 		.section	.debug_info,"",@progbits
   9                 	.Ldebug_info0:
  10                 		.section	.debug_line,"",@progbits
  11                 	.Ldebug_line0:
  12 0000 00 00 00 00 		.text
  12      00 02 00 00 
  12      00 00 01 01 
  12      FB 0E 0D 00 
  12      01 01 01 01 
  13                 	.Ltext0:
  14                 		.section	.text.LightHardwareSetBlink,"ax",@progbits
  15                 		.global	LightHardwareSetBlink
  16                 		.type	LightHardwareSetBlink, @function
  17                 	LightHardwareSetBlink:
  18                 	.LFB6:
  19                 		.file 1 "csr_mesh_light_hw.c"
   0:csr_mesh_light_hw.c **** /******************************************************************************
   1:csr_mesh_light_hw.c ****  *  Copyright Cambridge Silicon Radio Limited 2015
   2:csr_mesh_light_hw.c ****  *  CSR Bluetooth Low Energy CSRmesh 1.3 Release
   3:csr_mesh_light_hw.c ****  *  Application version 1.3
   4:csr_mesh_light_hw.c ****  *
   5:csr_mesh_light_hw.c ****  *  FILE
   6:csr_mesh_light_hw.c ****  *      csr_mesh_light_hw.c
   7:csr_mesh_light_hw.c ****  *
   8:csr_mesh_light_hw.c ****  *  DESCRIPTION
   9:csr_mesh_light_hw.c ****  *      This file implements the CSRmesh light hardware specific functions.
  10:csr_mesh_light_hw.c ****  *
  11:csr_mesh_light_hw.c ****  *  NOTE
  12:csr_mesh_light_hw.c ****  *      Default hardware is always IOT board.
  13:csr_mesh_light_hw.c ****  *
  14:csr_mesh_light_hw.c ****  *****************************************************************************/
  15:csr_mesh_light_hw.c **** 
  16:csr_mesh_light_hw.c **** /*============================================================================*
  17:csr_mesh_light_hw.c ****  *  SDK Header Files
  18:csr_mesh_light_hw.c ****  *============================================================================*/
  19:csr_mesh_light_hw.c **** #include <types.h>
  20:csr_mesh_light_hw.c **** 
  21:csr_mesh_light_hw.c **** /*============================================================================*
  22:csr_mesh_light_hw.c ****  *  Local Header Files
  23:csr_mesh_light_hw.c ****  *============================================================================*/
  24:csr_mesh_light_hw.c **** #include "user_config.h"
  25:csr_mesh_light_hw.c **** #ifdef GUNILAMP
  26:csr_mesh_light_hw.c **** #include "gunilamp_hw.h"
  27:csr_mesh_light_hw.c **** #else /* IOT Board */
  28:csr_mesh_light_hw.c **** #include "iot_hw.h"
  29:csr_mesh_light_hw.c **** #endif
  30:csr_mesh_light_hw.c **** 
  31:csr_mesh_light_hw.c **** #include "csr_mesh_light_hw.h"
  32:csr_mesh_light_hw.c **** 
  33:csr_mesh_light_hw.c **** /*============================================================================*
  34:csr_mesh_light_hw.c ****  *  Private Data
  35:csr_mesh_light_hw.c ****  *============================================================================*/
  36:csr_mesh_light_hw.c **** /* Color temperature calculation parameters */
  37:csr_mesh_light_hw.c **** /* Temperature is stored in 500 kelvin units */
  38:csr_mesh_light_hw.c **** #define CCT_TEMP_FACTOR             (500)
  39:csr_mesh_light_hw.c **** #define PACK_CCT_LEVEL(temp, level) (((uint16)level << 8)| \
  40:csr_mesh_light_hw.c ****                                      ((temp/CCT_TEMP_FACTOR) & 0xFF))
  41:csr_mesh_light_hw.c **** #define GET_LEVEL(val)              ((val >> 8) & 0xFF)
  42:csr_mesh_light_hw.c **** #define GET_TEMP(val)               (val & 0xFF)
  43:csr_mesh_light_hw.c **** #define LUT_SIZE(lut)               (sizeof(lut)/sizeof(lut[0]))
  44:csr_mesh_light_hw.c **** 
  45:csr_mesh_light_hw.c **** 
  46:csr_mesh_light_hw.c **** #ifdef COLOUR_TEMP_ENABLED
  47:csr_mesh_light_hw.c **** /* Look up tables for color temperature
  48:csr_mesh_light_hw.c ****  * (lower byte is Temperature in 500 kelvin units)
  49:csr_mesh_light_hw.c ****  * and color level (higher byte).
  50:csr_mesh_light_hw.c ****  */
  51:csr_mesh_light_hw.c **** 
  52:csr_mesh_light_hw.c **** /* LUT for Red */
  53:csr_mesh_light_hw.c **** static const uint16 cct_red_lut[] =
  54:csr_mesh_light_hw.c **** {
  55:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  6500, 255),
  56:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  7000, 245),
  57:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  8000, 227),
  58:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 10000, 204),
  59:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 12500, 188),
  60:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 15000, 179),
  61:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 20000, 168),
  62:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 25000, 163),
  63:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 30000, 159),
  64:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 35000, 157),
  65:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 40000, 155)
  66:csr_mesh_light_hw.c **** };
  67:csr_mesh_light_hw.c **** 
  68:csr_mesh_light_hw.c **** /* LUT for Green */
  69:csr_mesh_light_hw.c **** static const uint16 cct_green_lut[] =
  70:csr_mesh_light_hw.c **** {
  71:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  1000,  51),
  72:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  1500, 109),
  73:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  2500, 161),
  74:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  3000, 180),
  75:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  4000, 209),
  76:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  5000, 228),
  77:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  6000, 243),
  78:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  6500, 249),
  79:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  7000, 243),
  80:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL(  9000, 225),
  81:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 12000, 211),
  82:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 18000, 199),
  83:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 25000, 193),
  84:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 38000, 188)
  85:csr_mesh_light_hw.c **** };
  86:csr_mesh_light_hw.c **** 
  87:csr_mesh_light_hw.c **** /* LUT for Blue */
  88:csr_mesh_light_hw.c **** static const uint16 cct_blue_lut[] =
  89:csr_mesh_light_hw.c **** {
  90:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 1500,   0),
  91:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 2000,  18),
  92:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 2500,  72),
  93:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 3000, 107),
  94:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 4000, 163),
  95:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 5000, 206),
  96:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 6000, 239),
  97:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 6500, 253),
  98:csr_mesh_light_hw.c ****     PACK_CCT_LEVEL( 7000, 255)
  99:csr_mesh_light_hw.c **** };
 100:csr_mesh_light_hw.c **** 
 101:csr_mesh_light_hw.c **** /*============================================================================*
 102:csr_mesh_light_hw.c ****  *  Private Function Prototypes
 103:csr_mesh_light_hw.c ****  *============================================================================*/
 104:csr_mesh_light_hw.c **** /* Function to convert Color temperature to level from LUT */
 105:csr_mesh_light_hw.c **** static uint8 getLevelFromCCTLut(uint16 temp, const uint16 *color_lut,
 106:csr_mesh_light_hw.c ****                                              uint16 sizeof_lut);
 107:csr_mesh_light_hw.c **** 
 108:csr_mesh_light_hw.c **** /*============================================================================*
 109:csr_mesh_light_hw.c ****  *  Private Function Implementations
 110:csr_mesh_light_hw.c ****  *============================================================================*/
 111:csr_mesh_light_hw.c **** /*----------------------------------------------------------------------------*
 112:csr_mesh_light_hw.c ****  *  NAME
 113:csr_mesh_light_hw.c ****  *      getLevelFromCCTLut
 114:csr_mesh_light_hw.c ****  *
 115:csr_mesh_light_hw.c ****  *  DESCRIPTION
 116:csr_mesh_light_hw.c ****  *      This function linearly interpolates the color value from LUT and
 117:csr_mesh_light_hw.c ****  *      color temperature.
 118:csr_mesh_light_hw.c ****  *
 119:csr_mesh_light_hw.c ****  *  RETURNS
 120:csr_mesh_light_hw.c ****  *      Level of the colour from 0 - 255.
 121:csr_mesh_light_hw.c ****  *
 122:csr_mesh_light_hw.c ****  *---------------------------------------------------------------------------*/
 123:csr_mesh_light_hw.c **** static uint8 getLevelFromCCTLut(uint16 temp, const uint16 *color_lut,
 124:csr_mesh_light_hw.c ****                                              uint16 sizeof_lut)
 125:csr_mesh_light_hw.c **** {
 126:csr_mesh_light_hw.c ****     uint16 idx;
 127:csr_mesh_light_hw.c ****     int16  x2,y2,x1,y1;
 128:csr_mesh_light_hw.c ****     int32  val;
 129:csr_mesh_light_hw.c ****     uint16 thk = temp/CCT_TEMP_FACTOR;
 130:csr_mesh_light_hw.c **** 
 131:csr_mesh_light_hw.c ****     for (idx = 0; idx < sizeof_lut; idx++)
 132:csr_mesh_light_hw.c ****     {
 133:csr_mesh_light_hw.c ****         /* Find the temperature just greater than temperature to be set */
 134:csr_mesh_light_hw.c ****         if (thk < GET_TEMP(color_lut[idx]))
 135:csr_mesh_light_hw.c ****         {
 136:csr_mesh_light_hw.c ****             if (0 == idx)
 137:csr_mesh_light_hw.c ****             {
 138:csr_mesh_light_hw.c ****                 /* if the temperature is less than first LUT element
 139:csr_mesh_light_hw.c ****                  * then saturate at that value.
 140:csr_mesh_light_hw.c ****                  */
 141:csr_mesh_light_hw.c ****                 return GET_LEVEL(color_lut[idx]);
 142:csr_mesh_light_hw.c ****             }
 143:csr_mesh_light_hw.c ****             else
 144:csr_mesh_light_hw.c ****             {
 145:csr_mesh_light_hw.c ****                 /* Get the points on interpolation line
 146:csr_mesh_light_hw.c ****                  * Multiply temperature by unit factor to get value
 147:csr_mesh_light_hw.c ****                  * in kelvin.
 148:csr_mesh_light_hw.c ****                  */
 149:csr_mesh_light_hw.c ****                 y1 = (int16)GET_LEVEL(color_lut[idx - 1]);
 150:csr_mesh_light_hw.c ****                 x1 = (int16)GET_TEMP(color_lut[idx - 1]) * CCT_TEMP_FACTOR;
 151:csr_mesh_light_hw.c ****                 y2 = (int16)GET_LEVEL(color_lut[idx]);
 152:csr_mesh_light_hw.c ****                 x2 = (int16)GET_TEMP(color_lut[idx]) * CCT_TEMP_FACTOR;
 153:csr_mesh_light_hw.c **** 
 154:csr_mesh_light_hw.c ****                 /* Apply Straight Line interpolation.
 155:csr_mesh_light_hw.c ****                  * y = y1 + ((y2 - y1) * (x -x1))/(x2 - x1)
 156:csr_mesh_light_hw.c ****                  */
 157:csr_mesh_light_hw.c ****                 val = ((int32)(y2 - y1))*((int16)temp - x1);
 158:csr_mesh_light_hw.c ****                 val = (val)/(x2 - x1) + y1;
 159:csr_mesh_light_hw.c **** 
 160:csr_mesh_light_hw.c ****                 /* return the calculated value */
 161:csr_mesh_light_hw.c ****                 return ((uint8)val);
 162:csr_mesh_light_hw.c ****             }
 163:csr_mesh_light_hw.c ****         }
 164:csr_mesh_light_hw.c ****     }
 165:csr_mesh_light_hw.c **** 
 166:csr_mesh_light_hw.c ****     /* If temperature is greater than last element in LUT,
 167:csr_mesh_light_hw.c ****      * saturate to the highest
 168:csr_mesh_light_hw.c ****      */
 169:csr_mesh_light_hw.c ****     return GET_LEVEL(color_lut[sizeof_lut - 1]);
 170:csr_mesh_light_hw.c **** 
 171:csr_mesh_light_hw.c **** }
 172:csr_mesh_light_hw.c **** 
 173:csr_mesh_light_hw.c **** #endif /* COLOUR_TEMP_ENABLED */
 174:csr_mesh_light_hw.c **** 
 175:csr_mesh_light_hw.c **** /*============================================================================*
 176:csr_mesh_light_hw.c ****  *  Public function definitions
 177:csr_mesh_light_hw.c ****  *============================================================================*/
 178:csr_mesh_light_hw.c **** /*----------------------------------------------------------------------------*
 179:csr_mesh_light_hw.c ****  *  NAME
 180:csr_mesh_light_hw.c ****  *      LightHardwareInit
 181:csr_mesh_light_hw.c ****  *
 182:csr_mesh_light_hw.c ****  *  DESCRIPTION
 183:csr_mesh_light_hw.c ****  *      This function initializes the light hardware, like PIO, interface etc.
 184:csr_mesh_light_hw.c ****  *
 185:csr_mesh_light_hw.c ****  * PARAMETERS
 186:csr_mesh_light_hw.c ****  *      Nothing.
 187:csr_mesh_light_hw.c ****  *
 188:csr_mesh_light_hw.c ****  * RETURNS
 189:csr_mesh_light_hw.c ****  *      Nothing.
 190:csr_mesh_light_hw.c ****  *
 191:csr_mesh_light_hw.c ****  *----------------------------------------------------------------------------*/
 192:csr_mesh_light_hw.c **** extern void LightHardwareInit(void)
 193:csr_mesh_light_hw.c **** {
 194:csr_mesh_light_hw.c **** #ifdef GUNILAMP
 195:csr_mesh_light_hw.c ****     GuniLampInit();
 196:csr_mesh_light_hw.c **** #else /* IOT Board */
 197:csr_mesh_light_hw.c ****     IOTLightControlDeviceInit();
 198:csr_mesh_light_hw.c **** #endif
 199:csr_mesh_light_hw.c **** }
 200:csr_mesh_light_hw.c **** 
 201:csr_mesh_light_hw.c **** /*----------------------------------------------------------------------------*
 202:csr_mesh_light_hw.c ****  *  NAME
 203:csr_mesh_light_hw.c ****  *      LightHardwarePowerControl
 204:csr_mesh_light_hw.c ****  *
 205:csr_mesh_light_hw.c ****  *  DESCRIPTION
 206:csr_mesh_light_hw.c ****  *      Controls the light device power.
 207:csr_mesh_light_hw.c ****  *
 208:csr_mesh_light_hw.c ****  * PARAMETERS
 209:csr_mesh_light_hw.c ****  *      power_on [in] Turns ON power if TRUE.
 210:csr_mesh_light_hw.c ****  *                    Turns OFF power if FALSE.
 211:csr_mesh_light_hw.c ****  *
 212:csr_mesh_light_hw.c ****  * RETURNS
 213:csr_mesh_light_hw.c ****  *      Nothing.
 214:csr_mesh_light_hw.c ****  *
 215:csr_mesh_light_hw.c ****  *----------------------------------------------------------------------------*/
 216:csr_mesh_light_hw.c **** extern void LightHardwarePowerControl(bool power_on)
 217:csr_mesh_light_hw.c **** {
 218:csr_mesh_light_hw.c **** #ifdef GUNILAMP
 219:csr_mesh_light_hw.c ****     /* There is no control for Gunilamp power.
 220:csr_mesh_light_hw.c ****      * If Power OFF is requested, then set all the intensities to Zero.
 221:csr_mesh_light_hw.c ****      */
 222:csr_mesh_light_hw.c ****     if (power_on == FALSE)
 223:csr_mesh_light_hw.c ****     {
 224:csr_mesh_light_hw.c ****         GuniLampControl(0, 0, 0, 0);
 225:csr_mesh_light_hw.c ****     }
 226:csr_mesh_light_hw.c **** #else /* IOT Board */
 227:csr_mesh_light_hw.c ****     IOTLightControlDevicePower(power_on);
 228:csr_mesh_light_hw.c **** #endif
 229:csr_mesh_light_hw.c **** }
 230:csr_mesh_light_hw.c **** 
 231:csr_mesh_light_hw.c **** /*----------------------------------------------------------------------------*
 232:csr_mesh_light_hw.c ****  *  NAME
 233:csr_mesh_light_hw.c ****  *      LightHardwareSetColor
 234:csr_mesh_light_hw.c ****  *
 235:csr_mesh_light_hw.c ****  *  DESCRIPTION
 236:csr_mesh_light_hw.c ****  *      Controls the color of the light.
 237:csr_mesh_light_hw.c ****  *
 238:csr_mesh_light_hw.c ****  * PARAMETERS
 239:csr_mesh_light_hw.c ****  *      red   [in] 0-255 levels of Red colour component.
 240:csr_mesh_light_hw.c ****  *      green [in] 0-255 levels of Green colour component.
 241:csr_mesh_light_hw.c ****  *      blue  [in] 0-255 levels of Blue colour component.
 242:csr_mesh_light_hw.c ****  *
 243:csr_mesh_light_hw.c ****  * RETURNS
 244:csr_mesh_light_hw.c ****  *      TRUE  if set color is supported by device.
 245:csr_mesh_light_hw.c ****  *      FALSE if it device is a white light or mono-chromatic light.
 246:csr_mesh_light_hw.c ****  *
 247:csr_mesh_light_hw.c ****  *----------------------------------------------------------------------------*/
 248:csr_mesh_light_hw.c **** extern bool LightHardwareSetColor(uint8 red, uint8 green, uint8 blue)
 249:csr_mesh_light_hw.c **** {
 250:csr_mesh_light_hw.c ****     bool status = FALSE;
 251:csr_mesh_light_hw.c **** 
 252:csr_mesh_light_hw.c **** #ifdef GUNILAMP
 253:csr_mesh_light_hw.c ****     status = TRUE;
 254:csr_mesh_light_hw.c ****     GuniLampControl(red, green, blue, 0);
 255:csr_mesh_light_hw.c **** #else /* IOT Board */
 256:csr_mesh_light_hw.c ****     status = TRUE;
 257:csr_mesh_light_hw.c ****     IOTLightControlDeviceSetColor(red, green, blue);
 258:csr_mesh_light_hw.c **** #endif
 259:csr_mesh_light_hw.c **** 
 260:csr_mesh_light_hw.c ****     return status;
 261:csr_mesh_light_hw.c **** }
 262:csr_mesh_light_hw.c **** 
 263:csr_mesh_light_hw.c **** /*----------------------------------------------------------------------------*
 264:csr_mesh_light_hw.c ****  *  NAME
 265:csr_mesh_light_hw.c ****  *      LightHardwareSetLevel
 266:csr_mesh_light_hw.c ****  *
 267:csr_mesh_light_hw.c ****  *  DESCRIPTION
 268:csr_mesh_light_hw.c ****  *      Controls the brightness of the light.
 269:csr_mesh_light_hw.c ****  *
 270:csr_mesh_light_hw.c ****  * PARAMETERS
 271:csr_mesh_light_hw.c ****  *      red   [in] 0-255 levels of Red colour component.
 272:csr_mesh_light_hw.c ****  *      green [in] 0-255 levels of Green colour component.
 273:csr_mesh_light_hw.c ****  *      blue  [in] 0-255 levels of Blue colour component.
 274:csr_mesh_light_hw.c ****  *      level [in] 0-255 levels of intensity.
 275:csr_mesh_light_hw.c ****  *
 276:csr_mesh_light_hw.c ****  * RETURNS
 277:csr_mesh_light_hw.c ****  *      Nothing.
 278:csr_mesh_light_hw.c ****  *
 279:csr_mesh_light_hw.c ****  *----------------------------------------------------------------------------*/
 280:csr_mesh_light_hw.c **** extern void LightHardwareSetLevel(uint8 red, uint8 green, uint8 blue, 
 281:csr_mesh_light_hw.c ****                                   uint8 level)
 282:csr_mesh_light_hw.c **** {
 283:csr_mesh_light_hw.c **** #ifdef GUNILAMP
 284:csr_mesh_light_hw.c ****     GuniLampControl(red, green, blue, level);
 285:csr_mesh_light_hw.c **** #else /* IOT Board */
 286:csr_mesh_light_hw.c ****     /* The brightness level is represented through RGB values */
 287:csr_mesh_light_hw.c ****     uint32 temp;
 288:csr_mesh_light_hw.c ****     temp  = (uint32)(red * level)/255;
 289:csr_mesh_light_hw.c ****     red = temp & 0xFF;
 290:csr_mesh_light_hw.c ****     temp  = (uint32)(green * level)/255;
 291:csr_mesh_light_hw.c ****     green = temp & 0xFF;
 292:csr_mesh_light_hw.c ****     temp  = (uint32)(blue * level)/255;
 293:csr_mesh_light_hw.c ****     blue = temp & 0xFF;
 294:csr_mesh_light_hw.c ****     IOTLightControlDeviceSetColor(red, green, blue);
 295:csr_mesh_light_hw.c **** #endif
 296:csr_mesh_light_hw.c **** }
 297:csr_mesh_light_hw.c **** 
 298:csr_mesh_light_hw.c **** #ifdef COLOUR_TEMP_ENABLED    
 299:csr_mesh_light_hw.c **** /*----------------------------------------------------------------------------*
 300:csr_mesh_light_hw.c ****  *  NAME
 301:csr_mesh_light_hw.c ****  *      LightHardwareSetColorTemp
 302:csr_mesh_light_hw.c ****  *
 303:csr_mesh_light_hw.c ****  *  DESCRIPTION
 304:csr_mesh_light_hw.c ****  *      Controls the colour temperature.
 305:csr_mesh_light_hw.c ****  *
 306:csr_mesh_light_hw.c ****  * PARAMETERS
 307:csr_mesh_light_hw.c ****  *      temp   [in] Colour temperature in kelvin.
 308:csr_mesh_light_hw.c ****  *
 309:csr_mesh_light_hw.c ****  * RETURNS
 310:csr_mesh_light_hw.c ****  *      TRUE  if Colour Temperature setting is supported by device.
 311:csr_mesh_light_hw.c ****  *      FALSE if Colour Temperature setting is NOT supported.
 312:csr_mesh_light_hw.c ****  *
 313:csr_mesh_light_hw.c ****  *----------------------------------------------------------------------------*/
 314:csr_mesh_light_hw.c **** extern bool LightHardwareSetColorTemp(uint16 temp)
 315:csr_mesh_light_hw.c **** {
 316:csr_mesh_light_hw.c ****     uint8  red, green, blue;
 317:csr_mesh_light_hw.c **** 
 318:csr_mesh_light_hw.c ****     red   = getLevelFromCCTLut(temp, cct_red_lut, LUT_SIZE(cct_red_lut));
 319:csr_mesh_light_hw.c ****     green = getLevelFromCCTLut(temp, cct_green_lut, LUT_SIZE(cct_green_lut));
 320:csr_mesh_light_hw.c ****     blue  = getLevelFromCCTLut(temp, cct_blue_lut, LUT_SIZE(cct_blue_lut));
 321:csr_mesh_light_hw.c **** 
 322:csr_mesh_light_hw.c ****     return LightHardwareSetColor(red, green, blue);
 323:csr_mesh_light_hw.c **** }
 324:csr_mesh_light_hw.c **** #endif /* COLOUR_TEMP_ENABLED */    
 325:csr_mesh_light_hw.c **** 
 326:csr_mesh_light_hw.c **** /*----------------------------------------------------------------------------*
 327:csr_mesh_light_hw.c ****  *  NAME
 328:csr_mesh_light_hw.c ****  *      LightHardwareSetBlink
 329:csr_mesh_light_hw.c ****  *
 330:csr_mesh_light_hw.c ****  *  DESCRIPTION
 331:csr_mesh_light_hw.c ****  *      Controls the blink colour and duration of light.
 332:csr_mesh_light_hw.c ****  *
 333:csr_mesh_light_hw.c ****  * PARAMETERS
 334:csr_mesh_light_hw.c ****  *      red      [in] 0-255 levels of Red colour component.
 335:csr_mesh_light_hw.c ****  *      green    [in] 0-255 levels of Green colour component.
 336:csr_mesh_light_hw.c ****  *      blue     [in] 0-255 levels of Blue colour component.
 337:csr_mesh_light_hw.c ****  *      on_time  [in] ON duration in multiples of 16ms.
 338:csr_mesh_light_hw.c ****  *      off_time [in] OFF duration in multiples of 16ms.
 339:csr_mesh_light_hw.c ****  *
 340:csr_mesh_light_hw.c ****  * RETURNS
 341:csr_mesh_light_hw.c ****  *      TRUE  if light blink is supported by device.
 342:csr_mesh_light_hw.c ****  *      FALSE if light blink is NOT supported.
 343:csr_mesh_light_hw.c ****  *
 344:csr_mesh_light_hw.c ****  *----------------------------------------------------------------------------*/
 345:csr_mesh_light_hw.c **** extern bool LightHardwareSetBlink(uint8 red, uint8 green, uint8 blue,
 346:csr_mesh_light_hw.c ****                                   uint8 on_time, uint8 off_time)
 347:csr_mesh_light_hw.c **** {
  20                 	:
  21                 		enter	#0x0004
  22 0000 04 0B       	.LCFI0:
  23                 		.loc 1 358 0
 348:csr_mesh_light_hw.c **** t8 off_time)
 349:csr_mesh_light_hw.c **** {
 350:csr_mesh_light_hw.c ****     bool status = FALSE;
 351:csr_mesh_light_hw.c **** 
 352:csr_mesh_light_hw.c **** #ifdef GUNILAMP
 353:csr_mesh_light_hw.c ****     /* For Gunilamp on/off time is not supported,
 354:csr_mesh_light_hw.c ****      *  so we still return FALSE.
 355:csr_mesh_light_hw.c ****      */
 356:csr_mesh_light_hw.c ****     GuniLampBlink(red, green, blue);
 357:csr_mesh_light_hw.c **** #else /* IOT Board */
  24                 	X,@(0x0004,Y)
  25 0001 04 1B       		st	X,@(0,Y)
  26 0002 00 2B       		ld	X,@(0x0005,Y)
  27 0003 05 1B       		st	X,@(0x0001,Y)
  28 0004 01 2B       		ld	X,@(0x0006,Y)
  29 0005 06 1B       		st	X,@(0x0002,Y)
  30 0006 02 2B       		bsr	IOTLightControlDeviceBlink
  31 0007 00 00 00 00 	.LVL1:
  31      00 9C 
  32                 		.loc 1 362 0
 358:csr_mesh_light_hw.c **** ard */
 359:csr_mesh_light_hw.c ****     status = TRUE;
 360:csr_mesh_light_hw.c ****     IOTLightControlDeviceBlink(red, green, blue, on_time, off_time);
 361:csr_mesh_light_hw.c **** #endif
  33                 	x0001
  34 000a 01 14       		leave	#0x0004
  35 000b 04 0F       	.LFE6:
  36                 		.size	LightHardwareSetBlink, .-LightHardwareSetBlink
  37                 		.global	__size_of_LightHardwareSetBlink
  38                 		.equ	__size_of_LightHardwareSetBlink,. - LightHardwareSetBlink
  39                 		.section	.text.LightHardwareSetLevel,"ax",@progbits
  40                 		.global	LightHardwareSetLevel
  41                 		.type	LightHardwareSetLevel, @function
  42                 	LightHardwareSetLevel:
  43                 	.LFB5:
  44                 		.loc 1 283 0
 283:csr_mesh_light_hw.c **** {
  45                 	r	#0x0001
  46                 	.LCFI1:
  47 0000 01 0B       		st	AL,@0xfff8
  48                 		st	AH,@0xfffa
  49 0001 F8 25       		ld	X,@(0x0002,Y)
  50 0002 FA 21       		.loc 1 289 0
  51 0003 02 1B       		ld	AL,@$XAP_UXL
 289:csr_mesh_light_hw.c ****     temp  = (uint32)(red * level)/255;
  52                 		smult	@0xfff8
  53 0004 00 00 00 15 	.LVL4:
  54                 		ld	AH,#0x0000
  55 0006 F8 91       		udiv	#0x00ff
  56                 		st	AL,@0xfff9
  57 0007 00 10       		.loc 1 291 0
  58 0008 00 09 01 00 		ld	AL,@$XAP_UXL
  58      FF 94 
  59 000b F9 25       		smult	@0xfffa
 291:csr_mesh_light_hw.c ****     temp  = (uint32)(green * level)/255;
  60                 	0x0000
  61 000c 00 00 00 15 		udiv	#0x00ff
  62 000e FA 91       		st	AL,@0xfff8
  63 000f 00 10       	.LVL5:
  64 0010 00 09 01 00 		.loc 1 293 0
  64      FF 94 
  65 0013 F8 25       		ld	AL,@$XAP_UXL
  66                 		smult	@(0x0001,Y)
 293:csr_mesh_light_hw.c ****     temp  = (uint32)(blue * level)/255;
  67                 	#0x0000
  68 0014 00 00 00 15 		udiv	#0x00ff
  69 0016 01 93       		.loc 1 295 0
  70 0017 00 10       		ld	X,@0xfff9
  71 0018 00 09 01 00 		and	X,#0x00ff
  71      FF 94 
 295:csr_mesh_light_hw.c ****     IOTLightControlDeviceSetColor(red, green, blue);
  72                 	,@0xfff9
  73 001b F9 19       		ld	X,@0xfff8
  74 001c 01 00 FF C8 		and	X,#0x00ff
  75 001e F9 29       		and	AL,#0x00ff
  76 001f F8 19       		st	AL,@(0x0001,Y)
  77 0020 01 00 FF C8 		ld	AL,@0xfff9
  78 0022 01 00 FF C4 		ld	AH,@$XAP_UXL
  79 0024 01 27       		.loc 1 297 0
  80 0025 F9 15       		ld	X,@(0x0000,Y)
  81 0026 00 00 00 11 		add	Y,#0x0001
 297:csr_mesh_light_hw.c **** }
  82                 	5 0
  83 0028 00 1B       		bra	IOTLightControlDeviceSetColor
  84 0029 01 3C       	.LVL6:
 295:csr_mesh_light_hw.c ****     IOTLightControlDeviceSetColor(red, green, blue);
  85                 	.LFE5:
  86 002a 00 00 00 00 		.size	LightHardwareSetLevel, .-LightHardwareSetLevel
  86      00 E0 
  87                 		.global	__size_of_LightHardwareSetLevel
  88                 		.equ	__size_of_LightHardwareSetLevel,. - LightHardwareSetLevel
  89                 		.section	.text.LightHardwareSetColor,"ax",@progbits
  90                 		.global	LightHardwareSetColor
  91                 		.type	LightHardwareSetColor, @function
  92                 	LightHardwareSetColor:
  93                 	.LFB4:
  94                 		.loc 1 250 0
  95                 	.LVL7:
  96                 		enter	#0x0002
 250:csr_mesh_light_hw.c **** {
  97                 	 258 0
  98                 		ld	X,@(0x0002,Y)
  99 0000 02 0B       		st	X,@(0,Y)
 100                 		bsr	IOTLightControlDeviceSetColor
 258:csr_mesh_light_hw.c ****     IOTLightControlDeviceSetColor(red, green, blue);
 101                 	8:
 102 0001 02 1B       		.loc 1 262 0
 103 0002 00 2B       		ld	AL,#0x0001
 104 0003 00 00 00 00 		leave	#0x0002
 104      00 9C 
 105                 	.LFE4:
 262:csr_mesh_light_hw.c **** }
 106                 	e	LightHardwareSetColor, .-LightHardwareSetColor
 107 0006 01 14       		.global	__size_of_LightHardwareSetColor
 108 0007 02 0F       		.equ	__size_of_LightHardwareSetColor,. - LightHardwareSetColor
 109                 		.section	.text.LightHardwarePowerControl,"ax",@progbits
 110                 		.global	LightHardwarePowerControl
 111                 		.type	LightHardwarePowerControl, @function
 112                 	LightHardwarePowerControl:
 113                 	.LFB3:
 114                 		.loc 1 218 0
 115                 	.LVL9:
 116                 		.loc 1 228 0
 117                 		bra	IOTLightControlDevicePower
 218:csr_mesh_light_hw.c **** {
 118                 	3:
 119                 		.size	LightHardwarePowerControl, .-LightHardwarePowerControl
 228:csr_mesh_light_hw.c ****     IOTLightControlDevicePower(power_on);
 120                 	global	__size_of_LightHardwarePowerControl
 121 0000 00 00 00 00 		.equ	__size_of_LightHardwarePowerControl,. - LightHardwarePowerControl
 121      00 E0 
 122                 		.section	.text.LightHardwareInit,"ax",@progbits
 123                 		.global	LightHardwareInit
 124                 		.type	LightHardwareInit, @function
 125                 	LightHardwareInit:
 126                 	.LFB2:
 127                 		.loc 1 194 0
 128                 		.loc 1 198 0
 129                 		bra	IOTLightControlDeviceInit
 130                 	.LFE2:
 131                 		.size	LightHardwareInit, .-LightHardwareInit
 194:csr_mesh_light_hw.c **** {
 132                 	ize_of_LightHardwareInit
 198:csr_mesh_light_hw.c ****     IOTLightControlDeviceInit();
 133                 	.equ	__size_of_LightHardwareInit,. - LightHardwareInit
 134 0000 00 00 00 00 		.section	.debug_frame,"",@progbits
 134      00 E0 
 135                 	.Lframe0:
 136                 		.4byte	.LECIE0-.LSCIE0
 137                 	.LSCIE0:
 138                 		.4byte	0xffffffff
 139                 		.1byte	0x1
 140                 		.ascii "\000"
 141 0000 00 00 00 00 		.1byte	0x1
 142                 		.1byte	0x7f
 143 0002 FF FF FF FF 		.1byte	0x3
 144 0004 01          		.1byte	0xc
 145 0004 00          		.1byte	0x5
 146 0005 01          		.1byte	0x0
 147 0005 7F          		.p2align	2
 148 0006 03          	.LECIE0:
 149 0006 0C          	.LSFDE0:
 150 0007 05          		.4byte	.LEFDE0-.LASFDE0
 151 0007 00          	.LASFDE0:
 152                 		.4byte	.Lframe0
 153                 		.4byte	.LFB6
 154                 		.4byte	.LFE6-.LFB6
 155 0008 00 00 00 00 		.1byte	0x4
 156                 		.4byte	.LCFI0-.LFB6
 157 000a 00 00 00 00 		.1byte	0xe
 158 000c 00 00 00 00 		.1byte	0x4
 159 000e 00 00 00 00 		.1byte	0x83
 160 0010 41          		.1byte	0x1
 161                 		.p2align	2
 162 0010 0E          	.LEFDE0:
 163 0011 04          	.LSFDE2:
 164 0011 83          		.4byte	.LEFDE2-.LASFDE2
 165 0012 01          	.LASFDE2:
 166 0012 00 00 00    		.4byte	.Lframe0
 167                 		.4byte	.LFB5
 168                 		.4byte	.LFE5-.LFB5
 169 0014 00 00 00 00 		.1byte	0x4
 170                 		.4byte	.LCFI1-.LFB5
 171 0016 00 00 00 00 		.1byte	0xe
 172 0018 00 00 00 00 		.1byte	0x1
 173 001a 00 00 00 00 		.1byte	0x83
 174 001c 41          		.1byte	0x1
 175                 		.p2align	2
 176 001c 0E          	.LEFDE2:
 177 001d 01          	.LSFDE4:
 178 001d 83          		.4byte	.LEFDE4-.LASFDE4
 179 001e 01          	.LASFDE4:
 180 001e 00 00 00    		.4byte	.Lframe0
 181                 		.4byte	.LFB4
 182                 		.4byte	.LFE4-.LFB4
 183 0020 00 00 00 00 		.1byte	0x4
 184                 		.4byte	.LCFI2-.LFB4
 185 0022 00 00 00 00 		.1byte	0xe
 186 0024 00 00 00 00 		.1byte	0x2
 187 0026 00 00 00 00 		.1byte	0x83
 188 0028 41          		.1byte	0x1
 189                 		.p2align	2
 190 0028 0E          	.LEFDE4:
 191 0029 02          	.LSFDE6:
 192 0029 83          		.4byte	.LEFDE6-.LASFDE6
 193 002a 01          	.LASFDE6:
 194 002a 00 00 00    		.4byte	.Lframe0
 195                 		.4byte	.LFB3
 196                 		.4byte	.LFE3-.LFB3
 197 002c 00 00 00 00 		.p2align	2
 198                 	.LEFDE6:
 199 002e 00 00 00 00 	.LSFDE8:
 200 0030 00 00 00 00 		.4byte	.LEFDE8-.LASFDE8
 201 0032 00 00 00 00 	.LASFDE8:
 202                 		.4byte	.Lframe0
 203                 		.4byte	.LFB2
 204                 		.4byte	.LFE2-.LFB2
 205 0034 00 00 00 00 		.p2align	2
 206                 	.LEFDE8:
 207 0036 00 00 00 00 		.text
 208 0038 00 00 00 00 	.Letext0:
 209 003a 00 00 00 00 		.section	.debug_loc,"",@progbits
 210                 	.Ldebug_loc0:
 211                 	.LLST0:
 212                 		.4byte	.LFB6
 213                 		.4byte	.LCFI0
 214                 		.2byte	0x1
 215                 		.1byte	0x55
 216                 		.4byte	.LCFI0
 217 0000 00 00 00 00 		.4byte	.LFE6
 218 0002 00 00 00 00 		.2byte	0x2
 219 0004 00 01       		.1byte	0x75
 220 0005 55          		.1byte	0x4
 221 0005 00 00 00 00 		.4byte	0x0
 222 0007 00 00 00 00 		.4byte	0x0
 223 0009 00 02       	.LLST1:
 224 000a 75          		.4byte	.LVL0
 225 000b 04          		.4byte	.LVL1
 226 000b 00 00 00 00 		.2byte	0x1
 227 000d 00 00 00 00 		.1byte	0x51
 228                 		.4byte	0x0
 229 000f 00 00 00 00 		.4byte	0x0
 230 0011 00 00 00 00 	.LLST2:
 231 0013 00 01       		.4byte	.LVL0
 232 0014 51          		.4byte	.LVL1
 233 0015 00 00 00 00 		.2byte	0x1
 234 0017 00 00 00 00 		.1byte	0x50
 235                 		.4byte	0x0
 236 0019 00 00 00 00 		.4byte	0x0
 237 001b 00 00 00 00 	.LLST3:
 238 001d 00 01       		.4byte	.LFB5
 239 001e 50          		.4byte	.LCFI1
 240 001e 00 00 00 00 		.2byte	0x1
 241 0020 00 00 00 00 		.1byte	0x55
 242                 		.4byte	.LCFI1
 243 0022 00 00 00 00 		.4byte	.LFE5
 244 0024 00 00 00 00 		.2byte	0x2
 245 0026 00 01       		.1byte	0x75
 246 0027 55          		.1byte	0x1
 247 0028 00 00 00 00 		.4byte	0x0
 248 002a 00 00 00 00 		.4byte	0x0
 249 002c 00 02       	.LLST4:
 250 002d 75          		.4byte	.LVL2
 251 002d 01          		.4byte	.LVL3
 252 002e 00 00 00 00 		.2byte	0x1
 253 0030 00 00 00 00 		.1byte	0x51
 254                 		.4byte	.LVL3
 255 0032 00 00 00 00 		.4byte	.LVL5
 256 0034 00 00 00 00 		.2byte	0x1
 257 0036 00 01       		.1byte	0x57
 258 0037 51          		.4byte	0x0
 259 0037 00 00 00 00 		.4byte	0x0
 260 0039 00 00 00 00 	.LLST5:
 261 003b 00 01       		.4byte	.LVL2
 262 003c 57          		.4byte	.LVL4
 263 003d 00 00 00 00 		.2byte	0x1
 264 003f 00 00 00 00 		.1byte	0x50
 265                 		.4byte	.LVL4
 266 0041 00 00 00 00 		.4byte	.LVL6
 267 0043 00 00 00 00 		.2byte	0x1
 268 0045 00 01       		.1byte	0x59
 269 0046 50          		.4byte	0x0
 270 0046 00 00 00 00 		.4byte	0x0
 271 0048 00 00 00 00 	.LLST6:
 272 004a 00 01       		.4byte	.LFB4
 273 004b 59          		.4byte	.LCFI2
 274 004c 00 00 00 00 		.2byte	0x1
 275 004e 00 00 00 00 		.1byte	0x55
 276                 		.4byte	.LCFI2
 277 0050 00 00 00 00 		.4byte	.LFE4
 278 0052 00 00 00 00 		.2byte	0x2
 279 0054 00 01       		.1byte	0x75
 280 0055 55          		.1byte	0x2
 281 0055 00 00 00 00 		.4byte	0x0
 282 0057 00 00 00 00 		.4byte	0x0
 283 0059 00 02       	.LLST7:
 284 005a 75          		.4byte	.LVL7
 285 005b 02          		.4byte	.LVL8
 286 005b 00 00 00 00 		.2byte	0x1
 287 005d 00 00 00 00 		.1byte	0x51
 288                 		.4byte	0x0
 289 005f 00 00 00 00 		.4byte	0x0
 290 0061 00 00 00 00 	.LLST8:
 291 0063 00 01       		.4byte	.LVL7
 292 0064 51          		.4byte	.LVL8
 293 0065 00 00 00 00 		.2byte	0x1
 294 0067 00 00 00 00 		.1byte	0x50
 295                 		.4byte	0x0
 296 0069 00 00 00 00 		.4byte	0x0
 297 006b 00 00 00 00 	.LLST10:
 298 006d 00 01       		.4byte	.LVL9
 299 006e 50          		.4byte	.LVL10
 300 006e 00 00 00 00 		.2byte	0x1
 301 0070 00 00 00 00 		.1byte	0x51
 302                 		.4byte	0x0
 303 0072 00 00 00 00 		.4byte	0x0
 304 0074 00 00 00 00 		.file 2 "C:/CSR_uEnergy_SDK-2.4.5.13/tools/include/CSR101x_A05/types.h"
 305 0076 00 01       		.section	.debug_info
 306 0077 51          		.4byte	0x1e4
 307 0078 00 00 00 00 		.2byte	0x2
 308 007a 00 00 00 00 		.4byte	.Ldebug_abbrev0
 309                 		.1byte	0x4
 310                 		.1byte	0x1
 311 0000 00 00 01 E4 		.4byte	.LASF22
 312 0002 00 02       		.1byte	0x1
 313 0003 00 00 00 00 		.4byte	.LASF23
 314 0005 04          		.4byte	.LASF24
 315 0005 01          		.4byte	0x0
 316 0006 00 00 00 00 		.4byte	0x0
 317 0008 01          		.4byte	.Ldebug_ranges0+0x0
 318 0008 00 00 00 00 		.4byte	.Ldebug_line0
 319 000a 00 00 00 00 		.1byte	0x2
 320 000c 00 00 00 00 		.4byte	.LASF2
 321 000e 00 00 00 00 		.1byte	0x2
 322 0010 00 00 00 00 		.1byte	0x1e
 323 0012 00 00 00 00 		.4byte	0x34
 324 0014 02          		.1byte	0x3
 325 0015 00 00 00 00 		.1byte	0x2
 326 0017 02          		.1byte	0x8
 327 0017 1E          		.4byte	.LASF0
 328 0018 00 00 00 34 		.1byte	0x3
 329 001a 03          		.1byte	0x2
 330 001a 02          		.1byte	0x7
 331 001b 08          		.4byte	.LASF1
 332 001b 00 00 00 00 		.1byte	0x2
 333 001d 03          		.4byte	.LASF3
 334 001e 02          		.1byte	0x2
 335 001e 07          		.1byte	0x20
 336 001f 00 00 00 00 		.4byte	0x4d
 337 0021 02          		.1byte	0x3
 338 0021 00 00 00 00 		.1byte	0x4
 339 0023 02          		.1byte	0x7
 340 0024 20          		.4byte	.LASF4
 341 0024 00 00 00 4D 		.1byte	0x3
 342 0026 03          		.1byte	0x2
 343 0027 04          		.1byte	0x6
 344 0027 07          		.4byte	.LASF5
 345 0028 00 00 00 00 		.1byte	0x3
 346 002a 03          		.1byte	0x2
 347 002a 02          		.1byte	0x5
 348 002b 06          		.4byte	.LASF6
 349 002b 00 00 00 00 		.1byte	0x3
 350 002d 03          		.1byte	0x4
 351 002e 02          		.1byte	0x5
 352 002e 05          		.4byte	.LASF7
 353 002f 00 00 00 00 		.1byte	0x2
 354 0031 03          		.4byte	.LASF8
 355 0031 04          		.1byte	0x2
 356 0032 05          		.1byte	0x2a
 357 0032 00 00 00 00 		.4byte	0x74
 358 0034 02          		.1byte	0x3
 359 0035 00 00 00 00 		.1byte	0x2
 360 0037 02          		.1byte	0x7
 361 0037 2A          		.4byte	.LASF9
 362 0038 00 00 00 74 		.1byte	0x4
 363 003a 03          		.1byte	0x1
 364 003a 02          		.4byte	.LASF17
 365 003b 07          		.1byte	0x1
 366 003b 00 00 00 00 		.2byte	0x15c
 367 003d 04          		.1byte	0x1
 368 003e 01          		.4byte	0x69
 369 003e 00 00 00 00 		.4byte	.LFB6
 370 0040 01          		.4byte	.LFE6
 371 0041 01 5C       		.4byte	.LLST0
 372 0042 01          		.4byte	0xf3
 373 0042 00 00 00 69 		.1byte	0x5
 374 0044 00 00 00 00 		.ascii "red\000"
 375 0046 00 00 00 00 		.1byte	0x1
 376 0048 00 00 00 00 		.2byte	0x15a
 377 004a 00 00 00 F3 		.4byte	0x29
 378 004c 05          		.4byte	.LLST1
 379 004d 72 65 64 00 		.1byte	0x6
 380 004f 01          		.4byte	.LASF10
 381 004f 01 5A       		.1byte	0x1
 382 0050 00 00 00 29 		.2byte	0x15a
 383 0052 00 00 00 00 		.4byte	0x29
 384 0054 06          		.4byte	.LLST2
 385 0055 00 00 00 00 		.1byte	0x7
 386 0057 01          		.4byte	.LASF11
 387 0057 01 5A       		.1byte	0x1
 388 0058 00 00 00 29 		.2byte	0x15a
 389 005a 00 00 00 00 		.4byte	0x29
 390 005c 07          		.1byte	0x2
 391 005d 00 00 00 00 		.1byte	0x91
 392 005f 01          		.1byte	0x0
 393 005f 01 5A       		.1byte	0x7
 394 0060 00 00 00 29 		.4byte	.LASF12
 395 0062 02          		.1byte	0x1
 396 0063 91          		.2byte	0x15b
 397 0063 00          		.4byte	0x29
 398 0064 07          		.1byte	0x2
 399 0064 00 00 00 00 		.1byte	0x91
 400 0066 01          		.1byte	0x1
 401 0067 01 5B       		.1byte	0x7
 402 0068 00 00 00 29 		.4byte	.LASF13
 403 006a 02          		.1byte	0x1
 404 006a 91          		.2byte	0x15b
 405 006b 01          		.4byte	0x29
 406 006b 07          		.1byte	0x2
 407 006c 00 00 00 00 		.1byte	0x91
 408 006e 01          		.1byte	0x2
 409 006e 01 5B       		.1byte	0x8
 410 006f 00 00 00 29 		.4byte	.LASF15
 411 0071 02          		.1byte	0x1
 412 0072 91          		.2byte	0x15d
 413 0072 02          		.4byte	0x69
 414 0073 08          		.1byte	0x0
 415 0073 00 00 00 00 		.1byte	0x9
 416 0075 01          		.1byte	0x1
 417 0076 01 5D       		.4byte	.LASF19
 418 0077 00 00 00 69 		.1byte	0x1
 419 0079 00          		.2byte	0x11b
 420 0079 09          		.1byte	0x1
 421 007a 01          		.4byte	.LFB5
 422 007a 00 00 00 00 		.4byte	.LFE5
 423 007c 01          		.4byte	.LLST3
 424 007d 01 1B       		.4byte	0x158
 425 007e 01          		.1byte	0x5
 426 007e 00 00 00 00 		.ascii "red\000"
 427 0080 00 00 00 00 		.1byte	0x1
 428 0082 00 00 00 00 		.2byte	0x119
 429 0084 00 00 01 58 		.4byte	0x29
 430 0086 05          		.4byte	.LLST4
 431 0087 72 65 64 00 		.1byte	0x6
 432 0089 01          		.4byte	.LASF10
 433 0089 01 19       		.1byte	0x1
 434 008a 00 00 00 29 		.2byte	0x119
 435 008c 00 00 00 00 		.4byte	0x29
 436 008e 06          		.4byte	.LLST5
 437 008f 00 00 00 00 		.1byte	0x7
 438 0091 01          		.4byte	.LASF11
 439 0091 01 19       		.1byte	0x1
 440 0092 00 00 00 29 		.2byte	0x119
 441 0094 00 00 00 00 		.4byte	0x29
 442 0096 07          		.1byte	0x2
 443 0097 00 00 00 00 		.1byte	0x91
 444 0099 01          		.1byte	0x0
 445 0099 01 19       		.1byte	0x7
 446 009a 00 00 00 29 		.4byte	.LASF14
 447 009c 02          		.1byte	0x1
 448 009d 91          		.2byte	0x11a
 449 009d 00          		.4byte	0x29
 450 009e 07          		.1byte	0x2
 451 009e 00 00 00 00 		.1byte	0x91
 452 00a0 01          		.1byte	0x1
 453 00a1 01 1A       		.1byte	0x8
 454 00a2 00 00 00 29 		.4byte	.LASF16
 455 00a4 02          		.1byte	0x1
 456 00a4 91          		.2byte	0x120
 457 00a5 01          		.4byte	0x42
 458 00a5 08          		.1byte	0x0
 459 00a6 00 00 00 00 		.1byte	0xa
 460 00a8 01          		.1byte	0x1
 461 00a8 01 20       		.4byte	.LASF18
 462 00a9 00 00 00 42 		.1byte	0x1
 463 00ab 00          		.1byte	0xfa
 464 00ac 0A          		.1byte	0x1
 465 00ac 01          		.4byte	0x69
 466 00ad 00 00 00 00 		.4byte	.LFB4
 467 00af 01          		.4byte	.LFE4
 468 00af FA          		.4byte	.LLST6
 469 00b0 01          		.4byte	0x1ad
 470 00b0 00 00 00 69 		.1byte	0xb
 471 00b2 00 00 00 00 		.ascii "red\000"
 472 00b4 00 00 00 00 		.1byte	0x1
 473 00b6 00 00 00 00 		.1byte	0xf9
 474 00b8 00 00 01 AD 		.4byte	0x29
 475 00ba 0B          		.4byte	.LLST7
 476 00bb 72 65 64 00 		.1byte	0xc
 477 00bd 01          		.4byte	.LASF10
 478 00bd F9          		.1byte	0x1
 479 00be 00 00 00 29 		.1byte	0xf9
 480 00c0 00 00 00 00 		.4byte	0x29
 481 00c2 0C          		.4byte	.LLST8
 482 00c2 00 00 00 00 		.1byte	0xd
 483 00c4 01          		.4byte	.LASF11
 484 00c5 F9          		.1byte	0x1
 485 00c5 00 00 00 29 		.1byte	0xf9
 486 00c7 00 00 00 00 		.4byte	0x29
 487 00c9 0D          		.1byte	0x2
 488 00ca 00 00 00 00 		.1byte	0x91
 489 00cc 01          		.1byte	0x0
 490 00cc F9          		.1byte	0xe
 491 00cd 00 00 00 29 		.4byte	.LASF15
 492 00cf 02          		.1byte	0x1
 493 00cf 91          		.1byte	0xfb
 494 00d0 00          		.4byte	0x69
 495 00d0 0E          		.1byte	0x0
 496 00d1 00 00 00 00 		.1byte	0xf
 497 00d3 01          		.1byte	0x1
 498 00d3 FB          		.4byte	.LASF20
 499 00d4 00 00 00 69 		.1byte	0x1
 500 00d6 00          		.1byte	0xda
 501 00d6 0F          		.1byte	0x1
 502 00d7 01          		.4byte	.LFB3
 503 00d7 00 00 00 00 		.4byte	.LFE3
 504 00d9 01          		.1byte	0x1
 505 00da DA          		.1byte	0x55
 506 00da 01          		.4byte	0x1d4
 507 00db 00 00 00 00 		.1byte	0xc
 508 00dd 00 00 00 00 		.4byte	.LASF21
 509 00df 01          		.1byte	0x1
 510 00df 55          		.1byte	0xd9
 511 00e0 00 00 01 D4 		.4byte	0x69
 512 00e2 0C          		.4byte	.LLST10
 513 00e2 00 00 00 00 		.1byte	0x0
 514 00e4 01          		.1byte	0x10
 515 00e5 D9          		.1byte	0x1
 516 00e5 00 00 00 69 		.4byte	.LASF25
 517 00e7 00 00 00 00 		.1byte	0x1
 518 00e9 00          		.1byte	0xc2
 519 00ea 10          		.1byte	0x1
 520 00ea 01          		.4byte	.LFB2
 521 00eb 00 00 00 00 		.4byte	.LFE2
 522 00ed 01          		.1byte	0x1
 523 00ed C2          		.1byte	0x55
 524 00ee 01          		.1byte	0x0
 525 00ee 00 00 00 00 		.section	.debug_abbrev
 526 00f0 00 00 00 00 		.1byte	0x1
 527 00f2 01          		.1byte	0x11
 528 00f3 55          		.1byte	0x1
 529 00f3 00          		.1byte	0x25
 530                 		.1byte	0xe
 531 0000 01          		.1byte	0x13
 532 0000 11          		.1byte	0xb
 533 0001 01          		.1byte	0x3
 534 0001 25          		.1byte	0xe
 535 0002 0E          		.1byte	0x1b
 536 0002 13          		.1byte	0xe
 537 0003 0B          		.1byte	0x11
 538 0003 03          		.1byte	0x1
 539 0004 0E          		.1byte	0x52
 540 0004 1B          		.1byte	0x1
 541 0005 0E          		.1byte	0x55
 542 0005 11          		.1byte	0x6
 543 0006 01          		.1byte	0x10
 544 0006 52          		.1byte	0x6
 545 0007 01          		.1byte	0x0
 546 0007 55          		.1byte	0x0
 547 0008 06          		.1byte	0x2
 548 0008 10          		.1byte	0x16
 549 0009 06          		.1byte	0x0
 550 0009 00          		.1byte	0x3
 551 000a 00          		.1byte	0xe
 552 000a 02          		.1byte	0x3a
 553 000b 16          		.1byte	0xb
 554 000b 00          		.1byte	0x3b
 555 000c 03          		.1byte	0xb
 556 000c 0E          		.1byte	0x49
 557 000d 3A          		.1byte	0x13
 558 000d 0B          		.1byte	0x0
 559 000e 3B          		.1byte	0x0
 560 000e 0B          		.1byte	0x3
 561 000f 49          		.1byte	0x24
 562 000f 13          		.1byte	0x0
 563 0010 00          		.1byte	0xb
 564 0010 00          		.1byte	0xb
 565 0011 03          		.1byte	0x3e
 566 0011 24          		.1byte	0xb
 567 0012 00          		.1byte	0x3
 568 0012 0B          		.1byte	0xe
 569 0013 0B          		.1byte	0x0
 570 0013 3E          		.1byte	0x0
 571 0014 0B          		.1byte	0x4
 572 0014 03          		.1byte	0x2e
 573 0015 0E          		.1byte	0x1
 574 0015 00          		.1byte	0x3f
 575 0016 00          		.1byte	0xc
 576 0016 04          		.1byte	0x3
 577 0017 2E          		.1byte	0xe
 578 0017 01          		.1byte	0x3a
 579 0018 3F          		.1byte	0xb
 580 0018 0C          		.1byte	0x3b
 581 0019 03          		.1byte	0x5
 582 0019 0E          		.1byte	0x27
 583 001a 3A          		.1byte	0xc
 584 001a 0B          		.1byte	0x49
 585 001b 3B          		.1byte	0x13
 586 001b 05          		.1byte	0x11
 587 001c 27          		.1byte	0x1
 588 001c 0C          		.1byte	0x12
 589 001d 49          		.1byte	0x1
 590 001d 13          		.1byte	0x40
 591 001e 11          		.1byte	0x6
 592 001e 01          		.1byte	0x1
 593 001f 12          		.1byte	0x13
 594 001f 01          		.1byte	0x0
 595 0020 40          		.1byte	0x0
 596 0020 06          		.1byte	0x5
 597 0021 01          		.1byte	0x5
 598 0021 13          		.1byte	0x0
 599 0022 00          		.1byte	0x3
 600 0022 00          		.1byte	0x8
 601 0023 05          		.1byte	0x3a
 602 0023 05          		.1byte	0xb
 603 0024 00          		.1byte	0x3b
 604 0024 03          		.1byte	0x5
 605 0025 08          		.1byte	0x49
 606 0025 3A          		.1byte	0x13
 607 0026 0B          		.1byte	0x2
 608 0026 3B          		.1byte	0x6
 609 0027 05          		.1byte	0x0
 610 0027 49          		.1byte	0x0
 611 0028 13          		.1byte	0x6
 612 0028 02          		.1byte	0x5
 613 0029 06          		.1byte	0x0
 614 0029 00          		.1byte	0x3
 615 002a 00          		.1byte	0xe
 616 002a 06          		.1byte	0x3a
 617 002b 05          		.1byte	0xb
 618 002b 00          		.1byte	0x3b
 619 002c 03          		.1byte	0x5
 620 002c 0E          		.1byte	0x49
 621 002d 3A          		.1byte	0x13
 622 002d 0B          		.1byte	0x2
 623 002e 3B          		.1byte	0x6
 624 002e 05          		.1byte	0x0
 625 002f 49          		.1byte	0x0
 626 002f 13          		.1byte	0x7
 627 0030 02          		.1byte	0x5
 628 0030 06          		.1byte	0x0
 629 0031 00          		.1byte	0x3
 630 0031 00          		.1byte	0xe
 631 0032 07          		.1byte	0x3a
 632 0032 05          		.1byte	0xb
 633 0033 00          		.1byte	0x3b
 634 0033 03          		.1byte	0x5
 635 0034 0E          		.1byte	0x49
 636 0034 3A          		.1byte	0x13
 637 0035 0B          		.1byte	0x2
 638 0035 3B          		.1byte	0xa
 639 0036 05          		.1byte	0x0
 640 0036 49          		.1byte	0x0
 641 0037 13          		.1byte	0x8
 642 0037 02          		.1byte	0x34
 643 0038 0A          		.1byte	0x0
 644 0038 00          		.1byte	0x3
 645 0039 00          		.1byte	0xe
 646 0039 08          		.1byte	0x3a
 647 003a 34          		.1byte	0xb
 648 003a 00          		.1byte	0x3b
 649 003b 03          		.1byte	0x5
 650 003b 0E          		.1byte	0x49
 651 003c 3A          		.1byte	0x13
 652 003c 0B          		.1byte	0x0
 653 003d 3B          		.1byte	0x0
 654 003d 05          		.1byte	0x9
 655 003e 49          		.1byte	0x2e
 656 003e 13          		.1byte	0x1
 657 003f 00          		.1byte	0x3f
 658 003f 00          		.1byte	0xc
 659 0040 09          		.1byte	0x3
 660 0040 2E          		.1byte	0xe
 661 0041 01          		.1byte	0x3a
 662 0041 3F          		.1byte	0xb
 663 0042 0C          		.1byte	0x3b
 664 0042 03          		.1byte	0x5
 665 0043 0E          		.1byte	0x27
 666 0043 3A          		.1byte	0xc
 667 0044 0B          		.1byte	0x11
 668 0044 3B          		.1byte	0x1
 669 0045 05          		.1byte	0x12
 670 0045 27          		.1byte	0x1
 671 0046 0C          		.1byte	0x40
 672 0046 11          		.1byte	0x6
 673 0047 01          		.1byte	0x1
 674 0047 12          		.1byte	0x13
 675 0048 01          		.1byte	0x0
 676 0048 40          		.1byte	0x0
 677 0049 06          		.1byte	0xa
 678 0049 01          		.1byte	0x2e
 679 004a 13          		.1byte	0x1
 680 004a 00          		.1byte	0x3f
 681 004b 00          		.1byte	0xc
 682 004b 0A          		.1byte	0x3
 683 004c 2E          		.1byte	0xe
 684 004c 01          		.1byte	0x3a
 685 004d 3F          		.1byte	0xb
 686 004d 0C          		.1byte	0x3b
 687 004e 03          		.1byte	0xb
 688 004e 0E          		.1byte	0x27
 689 004f 3A          		.1byte	0xc
 690 004f 0B          		.1byte	0x49
 691 0050 3B          		.1byte	0x13
 692 0050 0B          		.1byte	0x11
 693 0051 27          		.1byte	0x1
 694 0051 0C          		.1byte	0x12
 695 0052 49          		.1byte	0x1
 696 0052 13          		.1byte	0x40
 697 0053 11          		.1byte	0x6
 698 0053 01          		.1byte	0x1
 699 0054 12          		.1byte	0x13
 700 0054 01          		.1byte	0x0
 701 0055 40          		.1byte	0x0
 702 0055 06          		.1byte	0xb
 703 0056 01          		.1byte	0x5
 704 0056 13          		.1byte	0x0
 705 0057 00          		.1byte	0x3
 706 0057 00          		.1byte	0x8
 707 0058 0B          		.1byte	0x3a
 708 0058 05          		.1byte	0xb
 709 0059 00          		.1byte	0x3b
 710 0059 03          		.1byte	0xb
 711 005a 08          		.1byte	0x49
 712 005a 3A          		.1byte	0x13
 713 005b 0B          		.1byte	0x2
 714 005b 3B          		.1byte	0x6
 715 005c 0B          		.1byte	0x0
 716 005c 49          		.1byte	0x0
 717 005d 13          		.1byte	0xc
 718 005d 02          		.1byte	0x5
 719 005e 06          		.1byte	0x0
 720 005e 00          		.1byte	0x3
 721 005f 00          		.1byte	0xe
 722 005f 0C          		.1byte	0x3a
 723 0060 05          		.1byte	0xb
 724 0060 00          		.1byte	0x3b
 725 0061 03          		.1byte	0xb
 726 0061 0E          		.1byte	0x49
 727 0062 3A          		.1byte	0x13
 728 0062 0B          		.1byte	0x2
 729 0063 3B          		.1byte	0x6
 730 0063 0B          		.1byte	0x0
 731 0064 49          		.1byte	0x0
 732 0064 13          		.1byte	0xd
 733 0065 02          		.1byte	0x5
 734 0065 06          		.1byte	0x0
 735 0066 00          		.1byte	0x3
 736 0066 00          		.1byte	0xe
 737 0067 0D          		.1byte	0x3a
 738 0067 05          		.1byte	0xb
 739 0068 00          		.1byte	0x3b
 740 0068 03          		.1byte	0xb
 741 0069 0E          		.1byte	0x49
 742 0069 3A          		.1byte	0x13
 743 006a 0B          		.1byte	0x2
 744 006a 3B          		.1byte	0xa
 745 006b 0B          		.1byte	0x0
 746 006b 49          		.1byte	0x0
 747 006c 13          		.1byte	0xe
 748 006c 02          		.1byte	0x34
 749 006d 0A          		.1byte	0x0
 750 006d 00          		.1byte	0x3
 751 006e 00          		.1byte	0xe
 752 006e 0E          		.1byte	0x3a
 753 006f 34          		.1byte	0xb
 754 006f 00          		.1byte	0x3b
 755 0070 03          		.1byte	0xb
 756 0070 0E          		.1byte	0x49
 757 0071 3A          		.1byte	0x13
 758 0071 0B          		.1byte	0x0
 759 0072 3B          		.1byte	0x0
 760 0072 0B          		.1byte	0xf
 761 0073 49          		.1byte	0x2e
 762 0073 13          		.1byte	0x1
 763 0074 00          		.1byte	0x3f
 764 0074 00          		.1byte	0xc
 765 0075 0F          		.1byte	0x3
 766 0075 2E          		.1byte	0xe
 767 0076 01          		.1byte	0x3a
 768 0076 3F          		.1byte	0xb
 769 0077 0C          		.1byte	0x3b
 770 0077 03          		.1byte	0xb
 771 0078 0E          		.1byte	0x27
 772 0078 3A          		.1byte	0xc
 773 0079 0B          		.1byte	0x11
 774 0079 3B          		.1byte	0x1
 775 007a 0B          		.1byte	0x12
 776 007a 27          		.1byte	0x1
 777 007b 0C          		.1byte	0x40
 778 007b 11          		.1byte	0xa
 779 007c 01          		.1byte	0x1
 780 007c 12          		.1byte	0x13
 781 007d 01          		.1byte	0x0
 782 007d 40          		.1byte	0x0
 783 007e 0A          		.1byte	0x10
 784 007e 01          		.1byte	0x2e
 785 007f 13          		.1byte	0x0
 786 007f 00          		.1byte	0x3f
 787 0080 00          		.1byte	0xc
 788 0080 10          		.1byte	0x3
 789 0081 2E          		.1byte	0xe
 790 0081 00          		.1byte	0x3a
 791 0082 3F          		.1byte	0xb
 792 0082 0C          		.1byte	0x3b
 793 0083 03          		.1byte	0xb
 794 0083 0E          		.1byte	0x27
 795 0084 3A          		.1byte	0xc
 796 0084 0B          		.1byte	0x11
 797 0085 3B          		.1byte	0x1
 798 0085 0B          		.1byte	0x12
 799 0086 27          		.1byte	0x1
 800 0086 0C          		.1byte	0x40
 801 0087 11          		.1byte	0xa
 802 0087 01          		.1byte	0x0
 803 0088 12          		.1byte	0x0
 804 0088 01          		.1byte	0x0
 805 0089 40          		.section	.debug_pubnames,"",@progbits
 806 0089 0A          		.4byte	0x90
 807 008a 00          		.2byte	0x2
 808 008a 00          		.4byte	.Ldebug_info0
 809 008b 00          		.4byte	0x1e8
 810                 		.4byte	0x7b
 811 0000 00 00 00 90 		.ascii "LightHardwareSetBlink\000"
 812 0002 00 02       		.4byte	0xf3
 813 0003 00 00 00 00 		.ascii "LightHardwareSetLevel\000"
 814 0005 00 00 01 E8 		.4byte	0x158
 815 0007 00 00 00 7B 		.ascii "LightHardwareSetColor\000"
 816 0009 4C 69 67 68 		.4byte	0x1ad
 816      74 48 61 72 
 816      64 77 61 72 
 816      65 53 65 74 
 816      42 6C 69 6E 
 817 0014 00 00 00 F3 		.ascii "LightHardwarePowerControl\000"
 818 0016 4C 69 67 68 		.4byte	0x1d4
 818      74 48 61 72 
 818      64 77 61 72 
 818      65 53 65 74 
 818      4C 65 76 65 
 819 0021 00 00 01 58 		.ascii "LightHardwareInit\000"
 820 0023 4C 69 67 68 		.4byte	0x0
 820      74 48 61 72 
 820      64 77 61 72 
 820      65 53 65 74 
 820      43 6F 6C 6F 
 821 002e 00 00 01 AD 		.section	.debug_aranges,"",@progbits
 822 0030 4C 69 67 68 		.4byte	0x3c
 822      74 48 61 72 
 822      64 77 61 72 
 822      65 50 6F 77 
 822      65 72 43 6F 
 823 003d 00 00 01 D4 		.2byte	0x2
 824 003f 4C 69 67 68 		.4byte	.Ldebug_info0
 824      74 48 61 72 
 824      64 77 61 72 
 824      65 49 6E 69 
 824      74 00 
 825 0048 00 00 00 00 		.1byte	0x4
 826                 		.1byte	0x0
 827 0000 00 00 00 3C 		.2byte	0x0
 828 0002 00 02       		.2byte	0x0
 829 0003 00 00 00 00 		.4byte	.LFB6
 830 0005 04          		.4byte	.LFE6-.LFB6
 831 0005 00          		.4byte	.LFB5
 832 0006 00 00       		.4byte	.LFE5-.LFB5
 833 0007 00 00       		.4byte	.LFB4
 834 0008 00 00 00 00 		.4byte	.LFE4-.LFB4
 835 000a 00 00 00 00 		.4byte	.LFB3
 836 000c 00 00 00 00 		.4byte	.LFE3-.LFB3
 837 000e 00 00 00 00 		.4byte	.LFB2
 838 0010 00 00 00 00 		.4byte	.LFE2-.LFB2
 839 0012 00 00 00 00 		.4byte	0x0
 840 0014 00 00 00 00 		.4byte	0x0
 841 0016 00 00 00 00 		.section	.debug_ranges,"",@progbits
 842 0018 00 00 00 00 	.Ldebug_ranges0:
 843 001a 00 00 00 00 		.4byte	.Ltext0
 844 001c 00 00 00 00 		.4byte	.Letext0
 845 001e 00 00 00 00 		.4byte	.LFB6
 846                 		.4byte	.LFE6
 847                 		.4byte	.LFB5
 848 0000 00 00 00 00 		.4byte	.LFE5
 849 0002 00 00 00 00 		.4byte	.LFB4
 850 0004 00 00 00 00 		.4byte	.LFE4
 851 0006 00 00 00 00 		.4byte	.LFB3
 852 0008 00 00 00 00 		.4byte	.LFE3
 853 000a 00 00 00 00 		.4byte	.LFB2
 854 000c 00 00 00 00 		.4byte	.LFE2
 855 000e 00 00 00 00 		.4byte	0x0
 856 0010 00 00 00 00 		.4byte	0x0
 857 0012 00 00 00 00 		.section	.debug_str,"MS",@progbits,1
 858 0014 00 00 00 00 	.LASF1:
 859 0016 00 00 00 00 		.ascii "short unsigned int\000"
 860 0018 00 00 00 00 	.LASF9:
 861 001a 00 00 00 00 		.ascii "unsigned int\000"
 862                 	.LASF11:
 863                 		.ascii "blue\000"
 864 0000 73 68 6F 72 	.LASF3:
 864      74 20 75 6E 
 864      73 69 67 6E 
 864      65 64 20 69 
 864      6E 74 00 
 865                 		.ascii "uint32\000"
 866 0009 75 6E 73 69 	.LASF16:
 866      67 6E 65 64 
 866      20 69 6E 74 
 866      00 
 867                 		.ascii "temp\000"
 868 0010 62 6C 75 65 	.LASF19:
 868      00 
 869                 		.ascii "LightHardwareSetLevel\000"
 870 0012 75 69 6E 74 	.LASF15:
 870      33 32 00 
 871                 		.ascii "status\000"
 872 0016 74 65 6D 70 	.LASF2:
 872      00 
 873                 		.ascii "uint8\000"
 874 0018 4C 69 67 68 	.LASF4:
 874      74 48 61 72 
 874      64 77 61 72 
 874      65 53 65 74 
 874      4C 65 76 65 
 875                 		.ascii "long unsigned int\000"
 876 0023 73 74 61 74 	.LASF23:
 876      75 73 00 
 877                 		.ascii "csr_mesh_light_hw.c\000"
 878 0027 75 69 6E 74 	.LASF8:
 878      38 00 
 879                 		.ascii "bool\000"
 880 002a 6C 6F 6E 67 	.LASF17:
 880      20 75 6E 73 
 880      69 67 6E 65 
 880      64 20 69 6E 
 880      74 00 
 881                 		.ascii "LightHardwareSetBlink\000"
 882 0033 63 73 72 5F 	.LASF25:
 882      6D 65 73 68 
 882      5F 6C 69 67 
 882      68 74 5F 68 
 882      77 2E 63 00 
 883                 		.ascii "LightHardwareInit\000"
 884 003d 62 6F 6F 6C 	.LASF0:
 884      00 
 885                 		.ascii "unsigned char\000"
 886 003f 4C 69 67 68 	.LASF12:
 886      74 48 61 72 
 886      64 77 61 72 
 886      65 53 65 74 
 886      42 6C 69 6E 
 887                 		.ascii "on_time\000"
 888 004a 4C 69 67 68 	.LASF13:
 888      74 48 61 72 
 888      64 77 61 72 
 888      65 49 6E 69 
 888      74 00 
 889                 		.ascii "off_time\000"
 890 0053 75 6E 73 69 	.LASF21:
 890      67 6E 65 64 
 890      20 63 68 61 
 890      72 00 
 891                 		.ascii "power_on\000"
 892 005a 6F 6E 5F 74 	.LASF18:
 892      69 6D 65 00 
 893                 		.ascii "LightHardwareSetColor\000"
 894 005e 6F 66 66 5F 	.LASF7:
 894      74 69 6D 65 
 894      00 
 895                 		.ascii "long int\000"
 896 0063 70 6F 77 65 	.LASF10:
 896      72 5F 6F 6E 
 896      00 
 897                 		.ascii "green\000"
 898 0067 4C 69 67 68 	.LASF5:
 898      74 48 61 72 
 898      64 77 61 72 
 898      65 53 65 74 
 898      43 6F 6C 6F 
 899                 		.ascii "signed char\000"
 900 0072 6C 6F 6E 67 	.LASF20:
 900      20 69 6E 74 
 900      00 
 901                 		.ascii "LightHardwarePowerControl\000"
 902 0077 67 72 65 65 	.LASF24:
 902      6E 00 
 903                 		.ascii "F:\\C\\ArrayStorm\\CSR\\Software\\CSRmesh-1.3-Examples-Applications_icp\\applications\\Pro
 904 007a 73 69 67 6E 	.LASF6:
 904      65 64 20 63 
 904      68 61 72 00 
 905                 		.ascii "short int\000"
 906 0080 4C 69 67 68 	.LASF14:
 906      74 48 61 72 
 906      64 77 61 72 
 906      65 50 6F 77 
 906      65 72 43 6F 
 907                 		.ascii "level\000"
 908 008d 46 3A 5C 43 	.LASF22:
 908      5C 41 72 72 
 908      61 79 53 74 
 908      6F 72 6D 5C 
 908      43 53 52 5C 
 909                 		.ascii "GNU C 4.3.4 CSR version 24 for xap [1865517]\000"
 910 00d2 73 68 6F 72 		.ident	"GCC: (GNU) 4.3.4 CSR version 24 for xap [1865517]"
 910      74 20 69 6E 
 910      74 00 
 911                 	...
